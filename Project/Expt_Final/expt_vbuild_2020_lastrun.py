#!/usr/bin/env python
# -*- coding: utf-8 -*-
"""
This experiment was created using PsychoPy3 Experiment Builder (v2020.1.3),
    on April 24, 2021, at 16:22
If you publish work using this script the most relevant publication is:

    Peirce J, Gray JR, Simpson S, MacAskill M, Höchenberger R, Sogo H, Kastman E, Lindeløv JK. (2019) 
        PsychoPy2: Experiments in behavior made easy Behav Res 51: 195. 
        https://doi.org/10.3758/s13428-018-01193-y

"""

from __future__ import absolute_import, division

from psychopy import locale_setup
from psychopy import prefs
from psychopy import sound, gui, visual, core, data, event, logging, clock
from psychopy.constants import (NOT_STARTED, STARTED, PLAYING, PAUSED,
                                STOPPED, FINISHED, PRESSED, RELEASED, FOREVER)

import numpy as np  # whole numpy lib is available, prepend 'np.'
from numpy import (sin, cos, tan, log, log10, pi, average,
                   sqrt, std, deg2rad, rad2deg, linspace, asarray)
from numpy.random import random, randint, normal, shuffle
import os  # handy system and path functions
import sys  # to get file system encoding

from psychopy.hardware import keyboard



# Ensure that relative paths start from the same directory as this script
_thisDir = os.path.dirname(os.path.abspath(__file__))
os.chdir(_thisDir)

# Store info about the experiment session
psychopyVersion = '2020.1.3'
expName = 'expt_vbuild_2020'  # from the Builder filename that created this script
expInfo = {'participant': '', 'session': '001'}
dlg = gui.DlgFromDict(dictionary=expInfo, sortKeys=False, title=expName)
if dlg.OK == False:
    core.quit()  # user pressed cancel
expInfo['date'] = data.getDateStr()  # add a simple timestamp
expInfo['expName'] = expName
expInfo['psychopyVersion'] = psychopyVersion

# Data file name stem = absolute path + name; later add .psyexp, .csv, .log, etc
filename = _thisDir + os.sep + u'data/%s_%s_%s' % (expInfo['participant'], expName, expInfo['date'])

# An ExperimentHandler isn't essential but helps with data saving
thisExp = data.ExperimentHandler(name=expName, version='',
    extraInfo=expInfo, runtimeInfo=None,
    originPath='C:\\Users\\PRATHAM SHUKLA\\Documents\\CS786A\\Expt_Final\\expt_vbuild_2020_lastrun.py',
    savePickle=True, saveWideText=True,
    dataFileName=filename)
# save a log file for detail verbose info
logFile = logging.LogFile(filename+'.log', level=logging.EXP)
logging.console.setLevel(logging.WARNING)  # this outputs to the screen, not a file

endExpNow = False  # flag for 'escape' or other condition => quit the exp
frameTolerance = 0.001  # how close to onset before 'same' frame

# Start Code - component code to be run before the window creation

# Setup the Window
win = visual.Window(
    size=(1024, 768), fullscr=True, screen=0, 
    winType='pyglet', allowGUI=False, allowStencil=False,
    monitor='testMonitor', color=[0,0,0], colorSpace='rgb',
    blendMode='avg', useFBO=True, 
    units='height')
# store frame rate of monitor if we can measure it
expInfo['frameRate'] = win.getActualFrameRate()
if expInfo['frameRate'] != None:
    frameDur = 1.0 / round(expInfo['frameRate'])
else:
    frameDur = 1.0 / 60.0  # could not measure, so guess

# create a default keyboard (e.g. to check for escape)
defaultKeyboard = keyboard.Keyboard()

# Initialize components for Routine "welcome"
welcomeClock = core.Clock()
text_1 = visual.TextStim(win=win, name='text_1',
    text='Hi!\n\nThank you for volunteering for this study. It is a part of the project component for the course CS786A - Computational Cognitive Science. This is a decision-making experiment and will last for nearly 30 minutes.\nIn case you encounter any issues during the run, please contact 9760066853.\n\nHarsh Arora\nPratham Shukla\n\nPress any button to continue!',
    font='Arial',
    pos=(0, 0), height=0.05, wrapWidth=None, ori=0, 
    color='black', colorSpace='rgb', opacity=1, 
    languageStyle='LTR',
    depth=0.0);
key_resp_1 = keyboard.Keyboard()
b001 = [[-5.13720665e+01,-1.93440105e+01,6.39124045e+01,1.36422112e+01]
,[-6.27929144e+01,-2.78819329e+01,5.62669108e+01,1.75064456e+01]
,[-5.82281258e+01,-2.52492910e+01,5.52304148e+01,2.36272720e+01]
,[-5.19857861e+01,-2.94810038e+01,4.98775381e+01,2.37053816e+01]
,[-6.46081868e+01,-2.30877553e+01,5.14577027e+01,1.12163824e+01]
,[-5.35595150e+01,-3.69981063e+01,5.56827075e+01,1.95495375e+01]
,[-5.43028353e+01,-3.60700049e+01,3.75012868e+01,9.10195065e+00]
,[-6.01644802e+01,-3.68442614e+01,4.07166664e+01,-2.71950017e+00]
,[-5.28850962e+01,-3.52146540e+01,5.49196470e+01,4.76867957e+00]
,[-6.25352795e+01,-3.10106814e+01,5.42417863e+01,-7.13200470e-02]
,[-5.43494148e+01,-3.21440976e+01,4.54900327e+01,-4.70909975e+00]
,[-6.34586862e+01,-3.18164357e+01,4.94732931e+01,5.83561602e+00]
,[-5.63320846e+01,-2.97433700e+01,5.27096251e+01,2.25927898e+00]
,[-6.06056441e+01,-2.65516896e+01,5.79132765e+01,-1.87709142e+01]
,[-5.03804632e+01,-3.66634258e+01,5.57812397e+01,-8.05623625e+00]
,[-5.02231811e+01,-3.48500744e+01,5.86273852e+01,-8.86916047e+00]
,[-4.63330471e+01,-3.27331732e+01,6.45793482e+01,-1.47708902e+01]
,[-4.69266140e+01,-3.32705230e+01,6.04943290e+01,-1.48625496e+01]
,[-3.68031766e+01,-2.23247911e+01,6.47751911e+01,-3.27216050e+01]
,[-4.59005945e+01,-2.61749797e+01,6.10861298e+01,-2.49153691e+01]
,[-6.10271764e+01,-2.96902876e+01,5.85992116e+01,-1.85247895e+01]
,[-4.80563785e+01,-2.15724745e+01,5.01754856e+01,-1.92992799e+01]
,[-4.81952478e+01,-1.62164789e+01,5.16967500e+01,-2.06883318e+01]
,[-5.22939285e+01,-2.59560668e+01,5.18986499e+01,-1.56287581e+01]
,[-4.73007395e+01,-2.60647159e+01,5.48250833e+01,-1.73571431e+01]
,[-3.74940937e+01,-2.70302014e+01,6.35626091e+01,-2.64888970e+01]
,[-5.15885937e+01,-2.51169636e+01,5.37181773e+01,-2.19866423e+01]
,[-4.11893204e+01,-1.50342019e+01,4.37498351e+01,-1.82476290e+01]
,[-2.64605600e+01,-1.94870809e+01,4.01981092e+01,-7.99607207e+00]
,[-3.91382698e+01,-1.11901681e+01,3.93314369e+01,-7.79723499e+00]
,[-4.16874637e+01,-1.04300819e+01,3.73474104e+01,-8.00320607e+00]
,[-4.20907522e+01,-1.54296211e+01,4.66463800e+01,-2.07346944e+01]
,[-3.58664227e+01,-2.31107695e+01,4.80210807e+01,-1.68576485e+01]
,[-4.37176041e+01,-2.63045752e+01,3.98977557e+01,-1.98849433e+01]
,[-4.16744894e+01,-2.36918474e+01,5.16807489e+01,-1.04301275e+01]
,[-5.51575919e+01,-2.43439979e+01,4.54556385e+01,-1.52305566e+01]
,[-5.01027755e+01,-2.37819505e+01,4.02192396e+01,-1.99826664e+01]
,[-5.17331079e+01,-3.58944555e+01,3.11732340e+01,-1.40817239e+01]
,[-5.10395146e+01,-4.47151262e+01,4.62917000e+01,-8.55875750e+00]
,[-3.06236988e+01,-4.41225823e+01,3.54004540e+01,-2.18801032e+01]
,[-3.78759831e+01,-3.46909210e+01,3.31011735e+01,-2.17859699e+01]
,[-3.34797842e+01,-3.77128319e+01,3.50125549e+01,-1.83372521e+01]
,[-3.96202010e+01,-3.04322905e+01,4.02862686e+01,-1.97612170e+01]
,[-2.08522856e+01,-2.19459176e+01,3.65384593e+01,-1.16518746e+01]
,[-2.81076638e+01,-2.56432780e+01,3.56555532e+01,-2.13498266e+01]
,[-1.56002713e+01,-2.88532662e+01,3.04855306e+01,-1.89185506e+01]
,[-2.88405774e+01,-1.95930175e+01,4.21176907e+01,-1.99299839e+01]
,[-2.34395047e+01,-1.93395072e+01,3.36153432e+01,-1.67685039e+01]
,[-1.21309153e+01,-1.59760623e+01,2.46826915e+01,-1.93834046e+01]
,[-1.89164540e+01,1.38778986e-01,3.94042137e+01,-1.69625609e+01]
,[-1.58976940e+01,-1.28303913e+01,3.83901695e+01,-6.01815640e+00]
,[-6.81478630e+00,-1.35718255e+01,3.90739552e+01,-5.71412520e+00]
,[8.76709439e+00,-4.94244868e+00,6.05809370e+01,-3.91648721e+01]
,[2.82216081e+01,1.08789276e+01,4.62918925e+01,-2.22349097e+01]
,[2.00207774e+01,2.32620105e-01,2.71456595e+01,-1.77297258e+01]
,[5.66508957e+01,-2.20349802e+00,3.14348082e+01,-2.55722758e+01]
,[6.90798081e+01,4.72434123e+00,1.93749635e+01,-1.79295371e+01]
,[4.91092171e+01,3.42693141e+01,2.94459632e+01,-2.83583887e+01]
,[4.93644536e+01,1.22384748e+01,3.21477939e+01,-1.27294299e+01]
,[4.63719063e+01,1.81292749e+01,3.45663479e+01,2.50488566e+00]
,[5.60986279e+01,2.80050925e+01,2.60743364e+01,1.57717542e+01]
,[5.10932116e+01,4.09396586e+00,3.71242309e+01,3.01534179e+01]
,[8.40083522e+01,5.08672716e+01,4.22955071e+01,3.53432638e+01]
,[9.55602721e+01,2.93822245e+01,3.60475057e+01,2.65446859e+01]
,[8.50373848e+01,2.00363186e+01,4.94433767e+01,2.62565150e+00]
,[4.13870845e+01,1.87669023e+01,4.97893331e+01,2.08588329e+01]
,[3.84421435e+01,3.79622104e+01,2.65677967e+01,2.20522115e+01]
,[3.15542414e+01,3.28135578e+01,3.19383842e+01,1.91164563e+01]
,[6.63752967e+01,1.57169197e+01,2.15852165e+01,4.32304723e+00]
,[8.46540580e+01,3.97971535e+01,1.70957679e+01,-4.94208995e-01]
,[1.06247981e+02,3.86132984e+01,3.40455011e+01,-2.13992748e+01]
,[8.57583792e+01,4.49133933e+01,2.82823357e+01,-2.57398408e+01]
,[7.45077636e+01,5.36821100e+01,3.67066114e+01,-2.01670931e+01]
,[1.00433519e+02,4.55982779e+01,3.33172309e+01,-2.87723322e+01]
,[8.85630917e+01,4.11111137e+01,1.62927065e+01,-1.82054836e+01]
,[8.79850881e+01,4.42479464e+01,-5.74701315e+00,-1.02411805e+01]
,[9.09612367e+01,4.87291587e+01,-5.37045070e+00,-1.42867514e+01]
,[8.04953689e+01,2.42016018e+01,6.20255600e+00,-4.44714761e+01]
,[9.15019986e+01,1.57957947e+01,3.84294130e+01,-4.12963400e+01]
,[6.91237205e+01,1.85977209e+00,5.59581812e+01,-1.08064313e+01]
,[7.88775445e+01,8.30704149e+00,4.44783782e+01,-2.32555997e+01]
,[7.37071243e+01,-2.71675539e+01,4.88534598e+01,-3.49886788e+01]
,[9.88742018e+01,-2.37798653e+01,6.68186102e+01,-5.05351289e+01]
,[9.58679740e+01,-2.92569129e+01,4.13427353e+01,-6.85080072e+01]
,[4.19476004e+01,-4.13152301e+01,6.35533980e+01,-9.70564665e+01]
,[2.18333191e+01,-4.10273093e+01,6.95613545e+01,-9.27974289e+01]
,[2.52276105e+01,-3.72438461e+01,4.47382866e+01,-8.44919520e+01]
,[2.35364215e+01,-4.18833486e+01,5.65533778e+01,-9.72780492e+01]
,[4.65919687e+01,-5.48199808e+01,5.12364614e+01,-1.11877327e+02]
,[6.89777362e+01,-4.86092938e+01,7.26381299e+01,-9.06790073e+01]
,[9.36648441e+01,-8.72775431e+01,6.75825192e+01,-8.65315336e+01]
,[9.28751845e+01,-4.56660172e+01,8.58157000e+01,-5.59615324e+01]
,[8.74370038e+01,-4.95004000e+01,1.05399133e+02,-5.11987410e+01]
,[1.11807930e+02,-4.60333936e+01,5.81289683e+01,-3.89909569e+01]
,[9.79089122e+01,-5.08470994e+01,8.17849498e+01,-3.47498926e+01]
,[1.06143902e+02,-5.91813706e+01,8.88438828e+01,2.44213719e+00]
,[1.00310750e+02,-5.57283123e+01,9.74712772e+01,8.96386031e-01]
,[1.05922772e+02,-8.35915327e+01,1.07986491e+02,-6.86890852e+00]
,[9.39644341e+01,-6.14082441e+01,1.24512957e+02,-1.57091586e+01]
,[8.65800896e+01,-6.91065213e+01,1.19826166e+02,-1.16449260e+01]
,[8.18520299e+01,-5.70673035e+01,1.42054873e+02,1.51258795e+01]
,[8.04910944e+01,-7.79282766e+01,1.38975310e+02,-1.61510789e+01]
,[7.35957229e+01,-7.93168980e+01,1.34740270e+02,-1.29108333e+01]
,[6.98236512e+01,-7.57908358e+01,1.34722880e+02,-1.11867673e+01]
,[8.00590446e+01,-7.75563596e+01,1.25048307e+02,-7.80512235e+00]
,[8.15305707e+01,-7.50680439e+01,1.43890643e+02,-4.60556680e+00]
,[8.80886010e+01,-7.35152748e+01,1.33786411e+02,-8.72376937e+00]
,[7.53135645e+01,-6.46868513e+01,1.25605899e+02,1.27152800e+00]
,[7.59785434e+01,-6.06966156e+01,1.22922393e+02,5.63963807e+00]
,[9.07675039e+01,-7.33093963e+01,1.20399181e+02,1.70373563e+01]
,[8.17416260e+01,-6.04648704e+01,1.14392455e+02,9.88033194e+00]
,[7.57523283e+01,-6.84661075e+01,1.00317375e+02,2.03286515e+01]
,[5.91167369e+01,-5.13458612e+01,1.08057842e+02,7.01923997e+00]
,[6.05014068e+01,-6.43743559e+01,1.04940996e+02,7.50864560e+00]
,[5.54228162e+01,-6.03819379e+01,1.10943358e+02,4.70767082e+00]
,[5.87127570e+01,-6.17802547e+01,1.09047566e+02,2.91270202e+00]
,[5.07405137e+01,-5.87300783e+01,1.03303461e+02,4.68047089e+00]
,[4.92340957e+01,-5.77343045e+01,1.08181215e+02,-5.59972025e+00]
,[5.43360293e+01,-5.05406098e+01,9.63312912e+01,-7.83604615e+00]
,[5.86572794e+01,-5.39068518e+01,1.02774771e+02,-7.55393904e+00]
,[5.17994067e+01,-5.74262865e+01,1.00439138e+02,-1.00184297e+01]
,[5.83284381e+01,-4.58064916e+01,8.91146688e+01,-1.42398347e+01]
,[5.20626916e+01,-5.39386081e+01,9.84597642e+01,-1.63179363e+00]
,[4.97018447e+01,-5.61177621e+01,9.74311512e+01,-1.54990258e+01]
,[6.10174745e+01,-5.79944909e+01,8.28409498e+01,-1.98249634e+01]
,[6.29243941e+01,-6.19278416e+01,9.00672080e+01,-1.02280322e+01]
,[5.46064599e+01,-4.99871551e+01,8.66911845e+01,-1.71534318e+01]
,[5.19912598e+01,-6.32869780e+01,8.44163710e+01,-1.15804017e+01]
,[5.21306235e+01,-5.65109237e+01,8.35057497e+01,-1.08057233e+01]
,[3.82952388e+01,-5.06578384e+01,9.33393004e+01,-2.14557766e+01]
,[3.97861344e+01,-5.09215263e+01,8.71370450e+01,-1.63391614e+01]
,[3.61936420e+01,-3.67598931e+01,8.29403627e+01,-1.06820883e+01]
,[2.89512151e+01,-3.78417320e+01,7.41575122e+01,-1.77392473e+01]
,[2.14494954e+01,-3.21175759e+01,8.54484625e+01,-9.99468406e+00]
,[3.11178906e+01,-2.91359930e+01,8.37096233e+01,-2.36932064e+01]
,[3.18154664e+01,-3.59086285e+01,8.69200625e+01,-1.45887201e+01]
,[3.09565282e+01,-3.27331011e+01,8.64447301e+01,-2.35476738e+01]
,[3.19157499e+01,-1.24873487e+01,8.05927720e+01,-2.39030849e+01]
,[3.69411009e+01,-2.28803024e+01,8.06322142e+01,-2.25655726e+01]
,[3.13357294e+01,-2.09759127e+01,7.56002197e+01,-2.20136587e+01]
,[3.75022945e+01,-2.28784911e+01,6.89200116e+01,-2.28125765e+01]
,[2.85521693e+01,-2.30196153e+01,7.04553927e+01,-2.92466765e+01]
,[3.69726910e+01,-1.94992321e+01,6.71927925e+01,-3.55132077e+01]
,[3.51481914e+01,-2.62336324e+01,6.00062834e+01,-3.62205838e+01]
,[2.88639559e+01,-1.70952711e+01,6.61346523e+01,-2.65736476e+01]
,[3.97526093e+01,-1.57149230e+01,7.07408116e+01,-2.00248246e+01]
,[2.58786211e+01,-2.56740096e+01,7.73404797e+01,-1.94621983e+01]
,[3.11878055e+01,-1.26134923e+01,6.70908176e+01,-2.92532145e+01]
,[3.96968924e+01,-1.72978982e+01,6.46861592e+01,-1.58034217e+01]
,[2.82871826e+01,-2.41981382e+01,5.70769984e+01,-2.20214929e+01]
,[2.87681308e+01,-1.42257752e+01,7.47983404e+01,-2.78056432e+01]
,[2.36003919e+01,-2.54836900e+01,6.53657936e+01,-3.78025787e+01]
,[4.61560965e+01,-1.47080051e+01,9.37447550e+01,-3.14432960e+01]
,[7.21026673e+01,-2.23200429e+01,1.17361683e+02,-3.48853028e+01]
,[5.64134422e+01,-1.57201933e+01,1.22260793e+02,-3.73361747e+01]
,[5.83668778e+01,-7.55943547e+00,1.12860220e+02,-5.42150088e+01]
,[3.98296536e+01,-1.80533626e+01,1.22215212e+02,-7.02854474e+01]
,[2.39282247e+01,-4.93682419e+00,1.18802322e+02,-5.43261405e+01]
,[5.43344956e+01,-3.60402212e+00,1.25627854e+02,-2.36501923e+01]
,[6.96343523e+01,-4.66046738e+00,9.67458047e+01,-6.53532864e+00]
,[8.00964037e+01,6.05197334e+00,1.05567036e+02,-1.01394166e+01]
,[8.54980779e+01,1.05767989e+01,9.80254260e+01,-1.20256889e+00]
,[9.79611583e+01,-1.59589079e+01,9.33686875e+01,-2.06969774e+00]
,[1.11241952e+02,-1.16425169e+01,9.06347654e+01,-2.24134093e+00]
,[1.08484488e+02,-1.49011875e+01,8.04020056e+01,3.65791910e+00]
,[1.13358909e+02,-2.13312225e+01,9.63204497e+01,8.43839829e+00]
,[9.66027196e+01,-1.01970421e-01,8.27064699e+01,-8.53021033e+00]
,[1.13563438e+02,2.47118808e+01,8.30477260e+01,1.96074552e+00]
,[1.23608075e+02,5.23840300e+01,1.05686322e+02,5.57554766e+00]
,[1.25185659e+02,6.68086525e+01,9.96065310e+01,-2.17910425e+01]
,[1.06420181e+02,5.71032688e+01,9.79104682e+01,-3.44392953e+01]
,[1.18019569e+02,4.75040107e+01,5.42904155e+01,2.29652642e+01]
,[1.06441075e+02,3.89363946e+01,5.41433791e+01,3.65948246e+01]
,[1.33251680e+02,3.70489343e+01,6.72448080e+01,2.85029951e+01]
,[1.19049966e+02,6.20594340e+01,6.79392637e+01,5.83339000e+01]
,[1.21621250e+02,6.33675597e+01,5.00170920e+01,6.02660096e+01]
,[1.22873308e+02,6.57198073e+01,6.80950548e+01,8.12808180e+01]
,[1.24643195e+02,1.03510103e+02,7.44432337e+01,9.33314050e+01]
,[1.14662485e+02,1.01783431e+02,6.45530653e+01,1.16554934e+02]
,[1.50891547e+02,1.03884387e+02,6.03379545e+01,1.22182800e+02]
,[1.38210010e+02,1.15874638e+02,6.94010811e+01,1.27015289e+02]
,[1.21252152e+02,1.09616926e+02,6.59928585e+01,1.41397163e+02]
,[1.04152941e+02,1.29041117e+02,3.98978352e+01,1.47770289e+02]
,[1.13255851e+02,1.21054074e+02,4.70791907e+01,1.44126125e+02]
,[1.34063481e+02,1.31448059e+02,4.02432669e+01,1.33252194e+02]
,[1.27782055e+02,1.20809184e+02,2.77358732e+01,1.39960693e+02]
,[1.17880599e+02,1.13864979e+02,3.31167753e+00,1.52436361e+02]
,[1.29456513e+02,1.00718712e+02,1.00263604e+01,1.32216955e+02]
,[1.28470204e+02,8.76963892e+01,1.61928672e+01,1.40032170e+02]
,[1.05653440e+02,1.16686447e+02,2.89502196e+01,1.13309665e+02]
,[1.00346031e+02,1.02461548e+02,1.50204734e+01,1.07039575e+02]
,[8.73803170e+01,1.01302629e+02,1.18118601e+01,5.11623199e+01]
,[1.15275129e+02,9.19976810e+01,4.87170019e+01,5.72485108e+01]
,[1.12732923e+02,9.50946548e+01,4.34785224e+01,6.89231122e+01]
,[1.19066684e+02,1.14379796e+02,8.96985406e+01,1.10137046e+02]
,[1.09420615e+02,1.34374833e+02,5.16626025e+01,1.08364118e+02]
,[7.85975400e+01,1.29466441e+02,6.71695559e+01,1.26611047e+02]
,[7.64729838e+01,1.33749978e+02,6.05821091e+01,1.27214867e+02]
,[9.08973139e+01,1.40027519e+02,9.59189289e+01,1.35792209e+02]
,[8.19508953e+01,1.21710515e+02,5.92921769e+01,1.02274513e+02]]

b002 = [[20.25940055,-58.18557722,59.50399853,-19.03909303]
,[22.70478299,-59.50887073,68.3004117,-9.20520805]
,[25.86425282,-53.13466843,63.47670193,-14.21009798]
,[20.99881639,-55.21505256,67.63653934,-18.37531957]
,[12.4777072,-46.01490348,69.14662136,-23.12609044]
,[24.40695633,-45.93053159,71.77453399,-16.22518754]
,[14.32047017,-43.40817747,64.71085531,-7.7221029,]
,[21.9919244,-35.66684863,59.99201544,-10.29293902]
,[32.40071599,-37.70145367,65.66048464,-3.58281192]
,[38.81231787,-40.93656535,71.37684943,-13.15560845]
,[37.03206042,-41.02449616,50.44505573,-19.141447,]
,[41.47518328,-39.48675865,59.96315488,-26.36743598]
,[36.32192998,-43.43016225,60.60707523,-3.35987745]
,[28.98544951,-43.17716811,64.46777843,-1.76746993]
,[31.32920739,-31.35919264,69.57696616,-10.41217806]
,[25.94220945,-31.48060462,50.14137222,-0.19021037]
,[27.53815094,-34.9864495,50.19600652,8.17494409]
,[23.96487005,-29.77096086,40.54113578,-5.62837647]
,[32.76741071,-25.42256985,44.06085565,-7.16646393]
,[27.06028037,-34.38949627,35.31408441,-8.4528508,]
,[36.01057119,-31.29716215,38.74851773,-23.50870516]
,[30.28524709,-26.7907977,35.86880678,-17.96904141]
,[26.94395184,-34.26310121,39.78026516,-5.05056186]
,[22.37492093,-35.89222809,43.68107157,-5.80310741]
,[28.01239071,-24.11047239,40.95483952,-9.53770256]
,[26.78893295,-38.13554018,41.48139079,-2.59255454]
,[26.8849396,-26.02022485,21.50330893,-6.40764905]
,[24.34314402,-42.2974397,14.55856022,-13.44510274]
,[29.47697529,-38.65873795,20.35714923,-14.35686773]
,[34.72685805,-35.46925888,15.65185174,-6.75662182]
,[29.01709271,-43.89052169,15.27881908,-3.14574746]
,[44.04430189,-42.59098306,27.11063654,-10.21752962]
,[30.31569872,-36.57235282,18.1061712,-2.81871191]
,[28.43977929,-32.58418784,20.71797665,-12.81680732]
,[20.18190098,-41.95046919,21.55019682,-6.28278974]
,[27.30166245,-31.57375315,15.0362334,-7.11022004]
,[23.15509945,-29.94913665,17.83090664,-5.9388218,]
,[20.47063563,-32.72828006,15.93357133,-6.11486296]
,[17.37951467,-36.5244643,24.37503621,-16.62553904]
,[9.42783105,-26.98642866,17.40804073,-2.87036238]
,[14.21937879,-27.28988172,19.21155609,-1.75878203]
,[11.49901569,-16.70601442,20.27432381,2.1860473,]
,[12.48666383,-11.55818404,25.66396673,-8.47991927]
,[17.84620209,-24.18093568,25.36419125,-4.61997375]
,[11.10253965,-22.11960781,26.01611393,-1.70137011]
,[-3.74276617,-33.47222182,21.87373027,-2.33653859]
,[2.37724752,-28.77089487,15.24848493,-2.36376136]
,[3.69547094,-29.09222715,23.27979817,1.8155605,]
,[6.34174351,-27.43933207,25.52190033,-0.85573373]
,[8.0415526,-27.03831531,17.59952456,-0.28016853]
,[2.33267202,-23.1572854,33.56558452,3.55516743]
,[-2.60913876,-19.61828789,19.29760981,6.2060847,]
,[26.91553902,-7.72403134,14.85945874,0.46556377]
,[25.21920212,-3.97897042,-3.9734586,-0.96993576]
,[12.71012574,-16.74014105,-16.13799091,2.46190163]
,[3.25389004,-15.01905172,-4.32929373,32.56712744]
,[-2.68176517,-12.77808678,-28.63942893,10.17895747]
,[-2.90813202,13.62732801,-63.83338463,24.82644646]
,[-5.29278243,-6.43237181,-59.86127398,28.74996965]
,[-7.0755349,-3.33311682,-20.38188921,42.02479043]
,[3.05295956,0.20190469,-16.51177558,30.26683319]
,[10.48731512,0.15858213,-19.319232,15.64733593]
,[4.18673905,43.94332472,0.80648034,22.97966101]
,[9.720832,10.86801117,9.28455145,16.67002826]
,[27.42440841,-1.12568535,-1.02086645,11.15383454]
,[25.94192968,-5.11201297,-26.14816143,12.03699922]
,[41.00142769,23.85552117,-38.14510543,20.99716961]
,[16.96571222,29.42125136,-47.71363209,3.87020274]
,[14.82943844,21.2518512,-17.54117898,-8.52487551]
,[4.97903393,31.30923289,-25.17253064,20.67451168]
,[13.90471177,27.03664724,-22.93779608,-27.77031929]
,[-3.4438822,46.85539574,-18.8377113,-41.0931139,]
,[-29.89892613,55.84760013,-16.11107103,-63.14889642]
,[-18.069507,75.86369559,-15.76671501,-51.2544165,]
,[-15.75872856,73.49045573,-1.45331673,-50.72003274]
,[-44.06679531,80.05335435,7.90361643,-30.20174846]
,[-46.26237959,85.75000976,11.55210883,-26.88437411]
,[-52.764926,61.80617759,4.72127904,-13.79735835]
,[-23.31280724,57.3364012,16.47027921,-39.60549688]
,[-23.52585159,66.39503249,0.14870528,-56.9746286,]
,[-24.57116435,70.1460081,14.54136101,-64.08026849]
,[-23.31914345,71.60652906,11.70696896,-62.37169713]
,[-37.11320238,70.42993433,37.62146134,-98.27921102]
,[-25.79342343,102.21060045,35.51434526,-84.70099035]
,[-3.53431159,103.96032689,7.98439729,-92.31874351]
,[-8.19030642,80.51009638,1.54850444,-103.49845529]
,[-25.29250815,66.02101136,-11.82763319,-108.28591219]
,[-48.7664278,56.31749154,-9.7173535,-127.86443526]
,[-39.46083379,82.49346967,6.25574694,-116.93587867]
,[-17.11438407,50.32685472,12.77563471,-122.40736918]
,[-22.40825417,39.3276959,13.98048423,-100.36658157]
,[-32.7217594,54.47800323,24.68194994,-127.04391224]
,[-42.0375753,47.04696754,7.04663034,-110.05055755]
,[-49.66376858,51.82889381,22.07756673,-106.05280078]
,[-37.86940743,50.42529774,33.11424014,-102.06606171]
,[-9.89353566,25.36434537,53.92063708,-107.80028383]
,[-18.03884857,47.28649367,50.08333139,-95.35619476]
,[-24.71588998,27.60824606,50.09285938,-114.31752239]
,[-31.24351915,30.750649,79.47285619,-119.52218376]
,[-24.03455258,44.98703011,92.97749896,-122.05980086]
,[0.56702978,58.13365111,105.94875609,-130.56271224]
,[14.66408099,39.29979363,103.83040042,-133.99645984]
,[13.36684323,42.18691369,112.56754445,-134.02524413]
,[18.38604826,35.03304804,107.93918487,-125.86851871]
,[17.39120688,45.03620017,100.24784068,-138.5588677,]
,[10.69817797,35.72917138,102.75702409,-119.86565711]
,[18.57915626,29.87665391,89.87071893,-124.43027542]
,[19.68834343,28.41086209,82.62197008,-115.5008602,]
,[7.5405687,31.77165976,88.16109838,-117.37283393]
,[6.30766609,31.12991881,70.60971642,-109.98372928]
,[-1.45202111,30.95441488,80.04049349,-123.97608119]
,[7.57922677,31.20462911,81.35970907,-122.05603373]
,[6.00183475,27.84333622,77.27302779,-106.57003599]
,[11.19082112,43.94969099,87.46241233,-114.36535763]
,[-2.72330261,36.4602841,90.80446872,-111.16780359]
,[4.94878921,25.50596727,91.14465409,-115.01598254]
,[8.94631093,36.00849625,86.41423399,-102.04577354]
,[0.87417258,42.98879996,75.54061489,-93.92455931]
,[0.97495362,38.07650655,77.0097451,-104.11613984]
,[2.11115869,38.95485543,69.52322,-102.85757996]
,[6.64860795,40.45391884,82.47663695,-109.90769176]
,[4.14655357,38.42833996,72.53717793,-99.60786343]
,[3.17447086,44.93321234,65.96562262,-83.68466177]
,[-7.21140658,42.05398204,75.54302645,-80.31545935]
,[-6.59235338,32.95214067,75.38212722,-85.86394493]
,[-3.14454806,35.65757889,70.42102939,-76.528706,]
,[1.03464179,43.93733324,67.62909473,-77.3110492,]
,[2.19600463,39.66130531,70.76738604,-76.06693656]
,[3.4133132,50.57848393,60.06994837,-67.6734227,]
,[-10.08374241,33.28486806,44.03850246,-62.13454987]
,[-13.7214816,42.59297717,44.28487692,-66.60527005]
,[-19.01735298,42.01296203,57.12930554,-79.83404341]
,[-13.5640602,35.55825383,51.87357716,-65.15476967]
,[-13.72122955,36.04630383,59.11916714,-63.068575,]
,[-13.73021826,37.57254466,56.38228899,-61.69810196]
,[-24.88238986,39.76691734,46.80590529,-56.30947555]
,[-23.83099529,38.40716764,43.26668121,-56.35053021]
,[-23.87397594,30.61505588,42.35851667,-62.69183131]
,[-13.35162842,26.76841071,39.19636357,-49.01825145]
,[-20.22508567,28.56841473,35.52818008,-46.39508682]
,[-19.70878287,35.03775793,34.75865861,-45.61651,]
,[-16.10623484,29.48039513,40.43339536,-49.80942593]
,[-13.27294397,27.42554225,37.59592536,-45.2129187,]
,[-20.70771499,28.06737953,33.29779834,-54.8781935,]
,[-18.25415599,32.31839336,36.37023724,-49.94356591]
,[-26.35317031,33.36288863,47.91701702,-57.24019321]
,[-18.30908549,37.67070071,39.8770016,-52.00348313]
,[-9.75294689,23.27434566,34.08292838,-50.2022938,]
,[-17.7572529,33.09644481,35.80858839,-38.75220157]
,[-11.90887535,16.21135342,48.89105518,-41.6890975,]
,[-13.75896825,21.06637878,31.98907898,-36.96179398]
,[-20.72781447,9.61603324,31.28097439,-31.14879199]
,[-16.27660812,21.94373935,32.98878114,-66.1027526,]
,[33.56325634,-1.5449458,32.15928776,-98.59421978]
,[26.74696658,20.75680409,0.65026162,-101.01484792]
,[20.86911645,-2.37311751,-21.18442123,-97.11000554]
,[9.41178466,-7.94915714,-9.48717118,-93.41169045]
,[22.72652219,29.94061398,-55.80088935,-80.06532661]
,[41.23083387,33.53849929,-54.12042463,-102.60731275]
,[56.08152217,32.70248181,-47.26614771,-99.26208205]
,[68.99777018,31.46211171,-49.98842064,-96.77021118]
,[83.61221669,40.29927956,-55.02002017,-65.11067824]
,[82.335196,49.27532504,-36.82823017,-32.23685839]
,[78.37836736,24.33512038,-19.11296041,-23.39374735]
,[81.33815678,16.49247187,-49.19043759,-42.46593505]
,[67.75571938,-10.11397386,-49.56149018,-19.62275564]
,[57.34440119,-9.20550014,-54.39035047,-37.75167882]
,[26.47292076,13.96035184,-66.12539764,-26.92225749]
,[14.74558547,12.77772087,-54.486689,-14.60267905]
,[33.50842831,9.73459874,-66.27839233,-2.52404647]
,[6.08137474,-3.02449119,-67.19034957,13.29339566]
,[-3.39669821,23.23170525,-38.06122853,-18.74156791]
,[-13.53801109,24.39696178,-41.15861367,-28.11027526]
,[-26.95121627,9.55183063,-26.93852187,-21.4993152,]
,[5.99416718,-19.16723445,-32.70032287,-36.33545532]
,[-12.99203769,-7.87017549,-3.66773098,-45.51956577]
,[-2.45343107,-2.17282461,11.20802616,-48.52846202]
,[12.07741434,16.48183081,21.69692001,-69.32978654]
,[-15.02312102,43.44241489,6.8071475,-51.33758882]
,[16.451547,54.11743548,2.59274996,-72.33578857]
,[-12.8962723,53.98328447,-4.47334364,-62.87593001]
,[-35.46313945,38.11158031,-17.00699922,-67.08642899]
,[-31.60951998,41.05999926,-26.30225743,-62.37715106]
,[-32.93531753,59.38562495,-49.97054161,-70.6108315,]
,[-34.5046812,63.59594078,-39.31531385,-89.38274707]
,[-18.67813727,53.77262526,-42.73197339,-91.63032704]
,[-14.59321895,24.03242838,-45.82872042,-98.9598287,]
,[-22.11658547,33.9993753,-39.33694983,-90.49821761]
,[-36.47774775,47.10908715,-19.67221631,-78.80731001]
,[-52.02661785,57.70339512,-1.13158273,-97.8958899,]
,[-38.98318555,58.5063463,-4.38437098,-108.74903009]
,[-61.29914418,62.5583772,5.76317442,-128.36845066]
,[-40.66426389,83.60095289,6.03592673,-138.86132225]
,[-34.7188315,71.58463422,24.07121227,-135.0065922,]
,[-58.13151187,79.18787563,30.84796297,-121.66018863]
,[-36.2297102,97.89513864,4.0697512,-98.18052819]
,[-25.42435938,110.93223927,10.92481172,-87.68940529]
,[-37.91493896,123.51195878,46.59408854,-84.13219875]
,[-40.19875446,145.28914698,21.33208046,-84.65838164]
,[-88.82391002,103.23564604,50.07229148,-69.37371304]]

b101 = [[5.71648918e+01,-5.75761034e+01,-2.30435771e+01,2.44172849e+01]
,[5.64721650e+01,-6.66102169e+01,-2.02489587e+01,1.67324746e+01]
,[5.95531050e+01,-5.39801071e+01,-1.97745724e+01,2.22407377e+01]
,[6.35210225e+01,-5.77253245e+01,-1.64634798e+01,2.41278096e+01]
,[5.75091566e+01,-5.62254406e+01,-1.68197924e+01,1.49334018e+01]
,[5.84777826e+01,-5.29761132e+01,-2.15598037e+01,1.98123345e+01]
,[5.45704200e+01,-5.48707418e+01,-1.15581254e+01,2.50596981e+01]
,[5.74026426e+01,-5.94934295e+01,-4.32366397e+00,1.95464647e+01]
,[5.69666002e+01,-5.84013858e+01,-1.95318606e+00,1.51733458e+01]
,[6.44506880e+01,-5.94683607e+01,-1.42474601e+01,1.99686612e+01]
,[6.37807884e+01,-6.63071673e+01,-8.74892693e+00,2.18155664e+01]
,[6.41544285e+01,-5.56274330e+01,-6.51377374e+00,2.40014791e+01]
,[6.34076255e+01,-7.01425254e+01,-1.27714995e+01,2.63147791e+01]
,[5.92140707e+01,-5.77155488e+01,-1.50387651e+01,2.00838161e+01]
,[6.75062210e+01,-5.51133128e+01,-7.05609918e+00,1.84541767e+01]
,[6.27650469e+01,-4.65935191e+01,-9.64763839e+00,2.36831497e+01]
,[6.41870650e+01,-5.06438238e+01,-1.58973608e+01,1.82761459e+01]
,[5.91963649e+01,-5.51428700e+01,-1.40738366e+01,2.39110061e+01]
,[6.10596499e+01,-4.49512800e+01,-4.46527952e+00,2.51683261e+01]
,[4.70070193e+01,-5.45429653e+01,-3.10488132e+00,1.68736114e+01]
,[5.59693224e+01,-4.66955948e+01,-1.10464283e+01,1.90115093e+01]
,[6.61279234e+01,-3.95583873e+01,-2.05368270e+01,2.23852469e+01]
,[5.23689529e+01,-4.03864357e+01,-1.29523227e+01,1.93354200e+01]
,[6.38535925e+01,-3.87680028e+01,-1.36942280e+01,1.50677516e+01]
,[7.50245874e+01,-2.54138960e+01,-2.17809240e+01,1.43210299e+01]
,[7.05412284e+01,-3.50950503e+01,-1.27318519e+01,6.09881467e+00]
,[6.96790240e+01,-3.29992521e+01,-1.68509141e+01,-1.16082098e+01]
,[7.03657356e+01,-4.02290173e+01,-7.69757821e+00,-3.67846460e+00]
,[5.56752230e+01,-2.70026668e+01,-1.02063351e+01,7.25955568e+00]
,[6.32283379e+01,-2.96437819e+01,-9.14568653e+00,-3.93363409e+00]
,[6.51812538e+01,-2.58220442e+01,-6.60183902e+00,-5.61971932e+00]
,[5.58221364e+01,-2.05073366e+01,-1.09021253e+01,3.72766838e+00]
,[6.00772419e+01,-2.64133199e+01,-2.72898411e+00,-1.05511582e+01]
,[4.80790010e+01,-2.33495716e+01,1.22476486e+00,-1.91035085e+01]
,[4.68544023e+01,-2.84026148e+01,2.82824599e+00,-4.01481585e+00]
,[4.14613147e+01,-9.09415697e+00,-5.96634309e+00,-3.81623089e+00]
,[4.59479919e+01,-2.26502415e+01,-1.27260836e+00,-4.94026620e+00]
,[4.42091935e+01,-2.19863836e+01,-4.65768735e+00,-1.12266528e+01]
,[4.78343645e+01,-8.54360536e+00,1.67108376e+00,-4.97815948e+00]
,[4.39248266e+01,-3.26006783e+00,-6.38835440e+00,-6.57291620e+00]
,[3.53798970e+01,-2.10439797e+01,-1.89524291e+01,-1.10680987e+01]
,[3.54174200e+01,-1.93015120e+01,-1.14194054e+01,-7.34109050e+00]
,[3.90948460e+01,-1.68060266e+01,-4.97014473e+00,-7.30376198e+00]
,[3.55293588e+01,-2.06566583e+01,-1.10137306e+01,-8.23826099e+00]
,[3.67317526e+01,-9.68675984e+00,3.71555436e+00,-1.81542580e+01]
,[2.48204215e+01,-2.18829041e+01,1.06748986e+01,-1.50814238e+01]
,[2.70595597e+01,-1.34493378e+01,1.33830324e+01,-1.15046064e+01]
,[2.90461406e+01,-1.63092867e+01,9.24258443e+00,-4.98849857e+00]
,[2.92710803e+01,-1.85432421e+01,9.92303203e+00,-1.09571505e+01]
,[2.00734734e+01,-2.15375385e+01,4.13334375e+00,-3.79725704e+00]
,[2.99181213e+01,-1.28061251e+01,9.12449012e+00,-1.06797392e+01]
,[2.44809296e+01,-4.99665887e+00,4.78653002e+00,-8.94401537e+00]
,[2.64511571e+01,-6.42262657e+00,2.17756658e+01,-1.07797311e+01]
,[3.59394499e+01,-2.42045419e+00,1.97615278e+01,-1.69665629e+01]
,[4.38062665e+01,6.31365541e+00,1.76325675e+01,-1.78060577e+00]
,[3.84936029e+01,7.79818686e+00,3.67010479e+01,-7.93793080e+00]
,[7.67416186e+01,1.96312985e+00,3.48654021e+01,1.02290716e+01]
,[5.58408439e+01,-1.23217265e+01,9.27193976e+00,-1.84205638e+00]
,[6.23922634e+01,-1.89300113e+01,3.14072458e+01,-7.80308168e+00]
,[5.52235701e+01,-3.68513630e-01,1.86232973e+01,-2.14600654e+01]
,[2.76511757e+01,2.37144276e+01,3.59719885e+01,-7.02756460e+00]
,[-8.70675682e+00,2.01859351e+01,5.90015264e+01,-2.93816453e+01]
,[1.93833207e+01,2.57378510e+01,1.83582351e+01,-4.90029106e+00]
,[1.76990489e+01,4.74864300e+01,2.75247415e+01,-1.71677497e+01]
,[9.21543060e+00,4.39711426e+01,2.75746606e+01,-4.26446595e+01]
,[-3.56263817e+01,2.38170839e+01,4.13319508e+01,-5.70271572e+01]
,[-3.48440560e+01,2.17840209e+01,4.80169435e+01,-6.56747425e+01]
,[-1.23509083e+01,4.76831677e+00,4.58678770e+01,-8.32652972e+01]
,[-3.75811009e+01,2.00355114e+01,6.46476864e+01,-6.56796096e+01]
,[-3.41494587e+01,2.21190982e+01,5.98272549e+01,-8.15754436e+01]
,[-2.82889544e+01,1.37049834e+01,6.94650288e+01,-5.16504415e+01]
,[-3.02592136e+01,-4.34501566e-01,5.56574533e+01,-5.15727027e+01]
,[-5.57637352e+01,-3.35038395e+01,3.78569312e+01,-6.44700727e+01]
,[-4.08142653e+01,-2.28123395e+01,2.87387391e+01,-7.55767835e+01]
,[-6.95538809e+01,-1.56647802e+00,9.95580550e+00,-6.94214558e+01]
,[-6.41862155e+01,-2.04016086e+01,-1.56302992e+01,-6.54468160e+01]
,[-5.75452246e+01,-2.10988052e+01,-3.84553817e+00,-5.27028948e+01]
,[-9.58141179e+01,-1.77120879e+01,-1.83038584e+01,-5.09358595e+01]
,[-1.24218325e+02,-3.31402344e+01,-2.61601318e+01,-2.11099945e+01]
,[-1.53794245e+02,8.67802569e+00,2.87317546e+00,-1.54661259e+01]
,[-1.33753022e+02,8.72510596e+00,-6.97115541e+00,9.35823907e+00]
,[-1.40283903e+02,2.36653676e+00,7.12781606e+00,5.18915112e+01]
,[-1.38878630e+02,1.00073225e+01,-1.28810228e+00,6.86776985e+01]
,[-1.40000955e+02,9.20882559e+00,-2.50340550e+00,6.94573822e+01]
,[-9.91413514e+01,1.39167411e+01,-2.61387763e+01,6.41377772e+01]
,[-9.40095449e+01,-6.06382186e+00,-4.70964344e+00,6.70133523e+01]
,[-1.24491241e+02,3.55395293e+00,-1.65194107e+00,6.87752917e+01]
,[-1.13381481e+02,3.48449509e+00,3.03762419e-01,4.43639427e+01]
,[-1.19420182e+02,-2.78790105e+01,1.41992996e+01,5.40548276e+01]
,[-1.45652902e+02,-6.10519283e+01,-1.63840855e+00,5.56904304e+01]
,[-1.61382568e+02,-5.80434799e+01,1.07797319e+01,6.29979743e+01]
,[-1.67567027e+02,-5.81420019e+01,1.32950039e+01,6.86168008e+01]
,[-1.80153458e+02,-3.60824698e+01,1.23748833e+01,6.72460720e+01]
,[-1.48690854e+02,-1.91910158e+01,-1.00918666e+01,5.46660705e+01]
,[-1.65546910e+02,9.75068397e+00,1.79201748e+00,6.52362040e+01]
,[-1.94389635e+02,2.96642013e+01,3.63025752e+01,6.10668510e+01]
,[-1.85226384e+02,1.66076784e+01,4.45666926e+01,5.88476987e+01]
,[-1.89832275e+02,2.82893100e+01,5.34954719e+01,3.29407458e+01]
,[-1.54403058e+02,4.38572564e+01,3.63126899e+01,1.77617247e+01]
,[-1.59165638e+02,3.24120497e+01,2.73755130e+01,-1.65942179e+01]
,[-1.46390261e+02,2.35402420e+01,1.65016320e+00,-1.46179138e+01]
,[-1.65695095e+02,-5.23029054e+00,2.81817411e+00,-9.50551031e+00]
,[-1.62729757e+02,-2.74858858e+00,-7.36547050e+00,-2.80699904e+00]
,[-1.66955414e+02,-1.61186553e-01,-4.64063651e+00,-2.13910544e+01]
,[-1.55482673e+02,-4.90187212e-02,-5.97846448e+00,-2.13704874e+01]
,[-1.51298668e+02,3.34476855e+00,-9.21114110e+00,-2.16780349e+01]
,[-1.51886042e+02,5.23721763e+00,-4.13329127e+00,-1.79495984e+01]
,[-1.56732383e+02,-9.34806102e-01,-1.02157190e+01,-1.83512919e+01]
,[-1.55885860e+02,-9.41887803e+00,-4.12285921e+00,-1.06740076e+01]
,[-1.58640642e+02,-2.05380462e+00,-8.34046530e+00,-1.73710186e+01]
,[-1.53552802e+02,-2.57885188e-01,-3.51738294e+00,-1.31957576e+01]
,[-1.53276881e+02,-8.27856727e+00,9.31312869e-01,-1.42930304e+01]
,[-1.45635022e+02,-9.74808894e+00,-3.03882891e+00,-1.72066597e+01]
,[-1.45981253e+02,4.62606717e-01,-1.88542025e+00,-9.44074819e+00]
,[-1.54097713e+02,-8.42625404e+00,-5.85555251e+00,-1.62669188e+01]
,[-1.44610798e+02,-1.41432312e+01,-2.72523799e+00,-1.81209414e+01]
,[-1.49260320e+02,-1.05974766e+01,-7.87119337e+00,-1.55509338e+01]
,[-1.44901696e+02,-5.04947764e+00,-1.29064945e+01,-1.67560648e+01]
,[-1.39037570e+02,-1.39416586e+00,2.57716628e+00,-1.80547175e+01]
,[-1.39003253e+02,-4.99183416e+00,-4.39124097e+00,-2.14463338e+01]
,[-1.41139951e+02,-4.22227267e-01,-3.29239245e+00,-2.03743876e+01]
,[-1.42987674e+02,1.39127975e+00,-2.37754366e+00,-1.97055597e+01]
,[-1.48951061e+02,9.85594609e-01,-1.06886293e+01,-2.59982718e+01]
,[-1.43766522e+02,4.70666376e+00,4.82306146e+00,-2.06035021e+01]
,[-1.46400414e+02,4.92056373e+00,1.30253274e+01,-2.04009772e+01]
,[-1.44339329e+02,-5.70391058e+00,4.36484442e+00,-2.18138460e+01]
,[-1.41810937e+02,6.48653902e+00,6.03801833e+00,-1.97939216e+01]
,[-1.41158903e+02,1.25546132e+01,9.70427863e-01,-2.18029181e+01]
,[-1.37684023e+02,2.01615910e+01,-3.75099164e+00,-3.41782265e+01]
,[-1.38957461e+02,1.59553246e+01,9.01956316e+00,-3.89359931e+01]
,[-1.27815275e+02,2.26433069e+01,7.71796098e+00,-4.05729701e+01]
,[-1.26776492e+02,2.69387513e+01,4.25088452e+00,-3.07066701e+01]
,[-1.35185039e+02,3.14119601e+01,6.75524016e-01,-3.94083478e+01]
,[-1.21031942e+02,3.08126542e+01,1.46301876e+01,-2.46814388e+01]
,[-1.13882560e+02,2.82846490e+01,2.63225779e+00,-2.42400806e+01]
,[-1.09351958e+02,2.65686885e+01,5.90404819e+00,-3.28933536e+01]
,[-9.81884066e+01,2.07948896e+01,3.30651052e+00,-2.88374313e+01]
,[-9.21104004e+01,2.76143236e+01,2.94735265e+00,-3.90405967e+01]
,[-9.46554260e+01,3.80595005e+01,-4.09070084e+00,-4.39053943e+01]
,[-8.62173236e+01,4.04448951e+01,-1.64119184e+01,-4.69344174e+01]
,[-8.55659990e+01,3.26680279e+01,-5.52020773e+00,-4.14133173e+01]
,[-8.04682923e+01,2.96936422e+01,-7.24934679e-01,-4.14420183e+01]
,[-8.36261724e+01,1.54615547e+01,-5.08446841e+00,-3.02328543e+01]
,[-7.91368858e+01,2.56902495e+01,1.79380839e+00,-2.63618105e+01]
,[-7.68382919e+01,2.66367324e+01,-1.72069854e+00,-3.50579090e+01]
,[-6.92904604e+01,1.23546033e+01,1.13611312e+01,-3.68123961e+01]
,[-7.06970696e+01,1.63683323e+01,8.38787128e+00,-2.52434435e+01]
,[-5.74377141e+01,1.86281311e+01,1.08871519e+01,-2.80599949e+01]
,[-6.46616659e+01,2.68383486e+01,8.33756433e+00,-3.41189587e+01]
,[-6.56133606e+01,2.35561210e+01,1.12553559e+01,-2.61355515e+01]
,[-6.47433069e+01,2.48155739e+01,1.16808969e+01,-2.40022540e+01]
,[-7.90101021e+01,3.24521540e+01,1.92393867e+01,-3.23847145e+01]
,[-6.20640345e+01,4.58059636e+01,5.03035991e+01,-8.60378025e+00]
,[-3.24393203e+01,4.52391324e+01,5.05951087e+01,-1.27835797e+01]
,[-2.28493277e+01,7.87788218e+00,7.36779369e+01,1.31182862e+01]
,[-2.19704617e+01,2.91252535e+00,8.89645013e+01,1.93059740e+01]
,[-2.87775999e+01,1.41439472e+01,7.55949465e+01,2.34233654e+01]
,[-1.51807421e+01,-1.96992772e+00,1.09016734e+02,7.15519913e+01]
,[-2.82036541e+01,-5.56170343e+00,9.45878427e+01,4.21368355e+01]
,[-5.70356758e+01,4.77243257e+00,8.59029464e+01,3.86164325e+01]
,[-3.35618725e+01,-2.31859547e+01,9.04747958e+01,3.94207563e+01]
,[-1.14594015e+01,-2.67274499e+01,1.01321867e+02,2.39741982e+01]
,[-1.70525985e+01,-4.20612947e+01,8.14502763e+01,1.59816992e+01]
,[-2.45196997e+01,-4.39709799e+01,7.61066444e+01,1.39551278e+01]
,[-2.51319327e+01,-2.09204676e+01,6.92456238e+01,-1.65400697e+00]
,[-3.24714222e+01,-1.51560187e+01,8.89144223e+01,-7.83088973e+00]
,[-3.52014812e+01,6.53670908e+00,1.04393183e+02,2.85360725e+01]
,[-2.76542379e+01,3.78064604e+00,1.06357171e+02,1.49114264e+01]
,[-3.36881070e+01,-5.51929383e+00,1.08650911e+02,3.62155714e+01]
,[-3.47400752e+01,-1.57459318e+01,1.06605643e+02,6.59442004e+01]
,[-6.05238773e+01,1.72735810e+01,1.08329533e+02,8.44712816e+01]
,[-5.48918596e+01,4.70593154e+01,1.09252849e+02,5.80262138e+01]
,[-3.03957213e+01,5.39530582e+01,1.26080558e+02,5.00448886e+01]
,[-4.60721961e+01,7.52958975e+01,1.21949737e+02,3.61774161e+01]
,[-6.32139103e+01,5.58636786e+01,1.35648140e+02,7.30423230e+01]
,[-2.92945203e+01,5.42475336e+01,1.38475968e+02,6.55165444e+01]
,[-5.12140411e+01,8.16484971e+01,1.48633104e+02,8.50652178e+01]
,[-3.09852391e+01,7.46727275e+01,1.59350185e+02,5.48267089e+01]
,[-8.83404241e+00,7.64008744e+01,1.89265204e+02,7.00283294e+01]
,[-2.04385600e+01,7.25284972e+01,1.57240724e+02,5.47707151e+01]
,[-3.10138317e+01,9.52158897e+01,1.68554463e+02,5.33135597e+01]
,[-2.28635056e+01,8.46268670e+01,1.90817271e+02,9.21360186e+01]
,[-2.69269192e+01,8.97144535e+01,2.07436843e+02,8.64150549e+01]
,[-3.23077036e+01,1.01002937e+02,2.22189902e+02,5.61843305e+01]
,[-2.64645052e+01,9.97742187e+01,2.27538278e+02,7.74942533e+01]
,[-3.81795571e+01,1.18932433e+02,2.22255197e+02,7.27263844e+01]
,[-4.25731848e+01,1.39078190e+02,2.26235117e+02,5.20794396e+01]
,[-2.68877273e+01,1.40082274e+02,2.15742632e+02,3.31157721e+01]
,[-4.51692004e+01,1.26777388e+02,2.28371308e+02,3.64782921e+01]
,[-3.84704983e+01,1.25180580e+02,2.02570556e+02,2.13403643e+01]
,[-5.01980374e+01,1.47191129e+02,1.90448079e+02,2.01402480e+01]
,[-4.18440889e+01,1.20149936e+02,1.67800735e+02,3.78005103e+01]
,[-3.19400055e+00,1.35154584e+02,1.69549310e+02,7.56479938e+01]
,[-1.92154492e+01,1.53988550e+02,1.85004010e+02,8.84009870e+01]
,[-1.81305835e+01,1.31241475e+02,1.62330547e+02,8.33473974e+01]
,[6.88613244e-01,1.21111795e+02,1.82654716e+02,7.24957272e+01]
,[1.11632282e+01,1.10878805e+02,1.93059617e+02,6.23459158e+01]
,[-9.20022257e+00,1.26616403e+02,1.71622101e+02,4.97940333e+01]
,[9.75066612e-02,1.23274805e+02,1.62440060e+02,3.16622309e+01]
,[-1.46700625e+01,1.48431153e+02,1.80274675e+02,2.61522837e+01]]

b102 = [[2.05388392e+01,-5.79901868e+01,-1.82595048e+01,6.20370957e+01]
,[1.62110212e+01,-6.13695336e+01,-1.46497934e+01,6.25146880e+01]
,[2.49083442e+01,-6.37282141e+01,-2.57860374e+01,6.28202799e+01]
,[1.23835149e+01,-5.24820180e+01,-2.19076617e+01,6.02289679e+01]
,[2.82283113e+00,-4.63939439e+01,-1.36768061e+01,4.60559020e+01]
,[-1.61606778e+00,-4.43437712e+01,-9.27853569e+00,4.85924870e+01]
,[2.24323204e+00,-5.55474183e+01,-5.34723784e+00,4.89268965e+01]
,[-5.58090307e+00,-4.91719502e+01,-7.61854785e-01,4.63792596e+01]
,[-8.84738242e+00,-5.71578821e+01,-2.45571445e+00,3.83375741e+01]
,[-3.17380049e+00,-5.42089853e+01,7.67517005e+00,3.24492294e+01]
,[-2.54876106e+00,-5.62892655e+01,-1.21682470e+01,3.70228708e+01]
,[-4.55627941e+00,-5.38433625e+01,-9.35800408e+00,3.65548826e+01]
,[-6.65470326e+00,-4.75660152e+01,1.54310639e+01,3.92918418e+01]
,[-1.26391579e+01,-4.08566028e+01,9.67131540e+00,4.47020484e+01]
,[1.22444871e-01,-4.72849653e+01,-2.10015982e+00,3.50710317e+01]
,[-4.73060888e+00,-3.78196607e+01,3.33113794e+00,3.71622846e+01]
,[-6.17601133e+00,-3.43923708e+01,2.18458201e+00,4.46263485e+01]
,[-1.45036068e+01,-3.12235320e+01,1.30004603e+01,3.09498453e+01]
,[-1.28711360e+01,-2.78372467e+01,8.31640473e+00,2.65478280e+01]
,[-1.88295866e+01,-2.76033163e+01,1.06824192e+01,2.40638140e+01]
,[-1.74004863e+01,-2.90443218e+01,1.64978799e+01,2.91856483e+01]
,[-2.07861505e+01,-3.19215433e+01,8.12752385e+00,3.84955288e+01]
,[-1.47310140e+01,-2.77616021e+01,1.17704757e+00,3.96400284e+01]
,[-1.12782114e+01,-4.06607824e+01,3.92501097e+00,3.42035088e+01]
,[-1.36365602e+01,-2.86926185e+01,5.49831741e+00,2.96148988e+01]
,[-1.68123020e+01,-3.46731679e+01,-1.38795792e+00,3.15539804e+01]
,[-1.49854648e+01,-2.20378379e+01,-2.94659153e+00,2.68331361e+01]
,[-1.08190633e+01,-2.25378582e+01,-3.10076964e+00,2.19138005e+01]
,[-4.17781532e+00,-2.16088363e+01,1.92455574e-01,2.00176809e+01]
,[-5.27252575e+00,-1.12195950e+01,1.14261120e+00,3.21371334e+01]
,[-2.71509788e+00,-9.84764101e+00,-6.14920489e+00,2.90179673e+01]
,[1.19428097e+01,-3.46612982e+00,-1.54527718e+01,2.66836176e+01]
,[1.78446009e+01,2.45528316e+00,-2.45594274e+01,3.03948821e+01]
,[1.46364637e+01,-9.48350830e-01,-2.10631762e+01,3.35369897e+01]
,[1.69814747e+01,1.57044092e+00,-1.66824577e+01,3.04498073e+01]
,[5.14750253e+00,3.49354035e+00,-2.67009175e+01,1.49776469e+01]
,[1.21752682e+01,1.64267619e+01,-2.18963530e+01,1.50061105e+01]
,[1.41325904e+01,2.06733880e+01,-2.43080277e+01,1.64740119e+01]
,[1.70548750e+01,1.95547439e+01,-2.29478861e+01,2.00211886e+01]
,[1.93721968e+01,2.76594376e+01,-2.54240623e+01,1.74300781e+01]
,[2.09557386e+01,2.06510616e+01,-2.78382843e+01,1.46086072e+01]
,[1.00599125e+01,2.96874722e+01,-3.48971581e+01,1.78369018e+01]
,[1.53227773e+01,3.33211136e+01,-3.31617775e+01,1.70910912e+01]
,[1.94672128e+01,2.27398474e+01,-3.25368724e+01,1.27645594e+01]
,[1.25577895e+01,3.40673971e+01,-3.18204689e+01,3.24800945e+01]
,[1.80256417e+01,3.16081831e+01,-3.46635127e+01,1.95169486e+01]
,[1.97206714e+01,2.93122293e+01,-3.41026455e+01,7.74272755e+00]
,[1.07323602e+00,2.64128512e+01,-2.17959110e+01,5.81944253e+00]
,[9.22055643e+00,2.56474931e+01,-2.66733038e+01,3.05419927e+00]
,[1.09951725e+01,2.62259879e+01,-2.46477999e+01,2.49774034e+00]
,[3.53339678e-01,2.89633206e+01,-2.95902286e+01,-1.20025151e+00]
,[5.63653682e+00,3.00530365e+01,-3.39354473e+01,-6.25726954e+00]
,[-2.47223955e+01,5.47571242e+01,-4.54697221e+01,-8.69708674e+00]
,[7.64540917e+00,6.71341969e+01,-1.66090410e+01,-1.71701622e+01]
,[-5.54190491e+00,6.23111543e+01,-6.89804175e-01,-4.13223954e+01]
,[1.14808025e+01,7.62618294e+01,1.34427931e+01,-2.44012666e+01]
,[-1.02092101e+01,9.49637337e+01,2.80315854e+01,-1.63671106e+01]
,[-9.44463221e+00,9.24131395e+01,2.50496342e+01,-1.92340296e+01]
,[-4.89254016e+00,6.43739607e+01,1.88546775e+00,-4.30056484e+01]
,[-1.48797888e+01,5.95302539e+01,8.50128824e+00,-6.44429387e+01]
,[-2.17679810e+01,4.95019773e+01,-2.33127059e+01,-8.19610106e+01]
,[-8.79272086e+00,6.12325090e+01,-1.49526728e+01,-1.08555260e+02]
,[-2.62455169e+01,6.16598283e+01,-8.78330522e+00,-1.31764722e+02]
,[-6.49484388e+01,6.62951017e+01,-1.16996670e+01,-1.16920677e+02]
,[-6.00863536e+01,9.16087245e+01,-2.87648491e+01,-1.30111344e+02]
,[-4.81552388e+01,9.71661279e+01,-3.38035190e+01,-1.59717552e+02]
,[-5.42678149e+01,1.14831035e+02,-5.52777233e+01,-1.66425998e+02]
,[-3.45836765e+01,1.37322758e+02,-6.76282456e+01,-1.58146627e+02]
,[-3.33288517e+01,1.16470894e+02,-5.46716238e+01,-1.69692893e+02]
,[-4.09264409e+01,1.24459021e+02,-6.03003021e+01,-1.42635875e+02]
,[-3.66196178e+01,1.14773265e+02,-5.42041006e+01,-1.38898760e+02]
,[-4.60827950e+01,1.30579342e+02,-8.36050659e+01,-1.37113568e+02]
,[-4.75535009e+01,1.17916667e+02,-9.90057398e+01,-1.19821354e+02]
,[-3.69497857e+01,1.10694109e+02,-1.31129353e+02,-1.16783956e+02]
,[-5.25219822e+01,1.17961490e+02,-1.45015609e+02,-1.13019866e+02]
,[-7.12300236e+01,1.12844272e+02,-1.63645494e+02,-1.23356166e+02]
,[-9.01096554e+01,1.11105756e+02,-1.47440604e+02,-1.32383054e+02]
,[-7.90153828e+01,7.84006221e+01,-1.47060217e+02,-1.17042518e+02]
,[-8.37137510e+01,6.23798956e+01,-1.15193507e+02,-1.04844100e+02]
,[-6.36658397e+01,5.91736267e+01,-8.20043838e+01,-9.68098699e+01]
,[-6.52543378e+01,7.41474218e+01,-8.92165810e+01,-9.41887661e+01]
,[-6.22855349e+01,8.19729625e+01,-6.89709238e+01,-9.74785558e+01]
,[-6.70081852e+01,8.87887649e+01,-4.85897185e+01,-7.51252620e+01]
,[-6.85061733e+01,7.77557161e+01,-4.32106774e+01,-6.83553442e+01]
,[-1.14841062e+02,7.35942360e+01,-6.51558571e+01,-7.70282042e+01]
,[-1.22119266e+02,8.11964700e+01,-6.89913982e+01,-1.11956964e+02]
,[-1.00209430e+02,6.75035062e+01,-6.04605755e+01,-1.20795017e+02]
,[-1.13569280e+02,7.93773012e+01,-5.43459534e+01,-1.12447077e+02]
,[-1.13002125e+02,9.80660706e+01,-5.72091178e+01,-1.22894278e+02]
,[-1.15172799e+02,1.14044363e+02,-4.77403593e+01,-1.30711866e+02]
,[-1.31518901e+02,1.23345137e+02,-4.49242134e+01,-1.39772744e+02]
,[-1.37703090e+02,1.27779517e+02,-7.82264529e+01,-1.48325737e+02]
,[-1.30251592e+02,1.24025405e+02,-5.19123588e+01,-1.38311429e+02]
,[-1.34512466e+02,1.46653311e+02,-4.62319036e+01,-1.29704082e+02]
,[-1.47035807e+02,1.40861826e+02,-4.75171509e+01,-1.17810146e+02]
,[-1.30665343e+02,1.38425459e+02,-2.82060737e+01,-1.21660935e+02]
,[-1.31028559e+02,1.07456345e+02,-2.95144969e+01,-1.46748930e+02]
,[-1.26284240e+02,8.59791533e+01,-3.32933949e+01,-1.31795801e+02]
,[-1.44053882e+02,8.78465993e+01,-1.32473680e+01,-1.19630591e+02]
,[-1.66578979e+02,6.22065403e+01,1.14767603e+01,-1.35516969e+02]
,[-1.53595957e+02,7.21777480e+01,-3.03994139e-02,-1.39548602e+02]
,[-1.51723911e+02,6.28695204e+01,1.78418672e+01,-1.56673308e+02]
,[-1.41629633e+02,6.81843750e+01,1.36093390e+01,-1.56248623e+02]
,[-1.36923178e+02,6.18111960e+01,1.90070156e+01,-1.48347747e+02]
,[-1.40977078e+02,5.32515701e+01,1.33275103e+01,-1.52625477e+02]
,[-1.27894299e+02,6.21866002e+01,1.14349049e+01,-1.39827771e+02]
,[-1.25427173e+02,5.51017244e+01,-1.43415882e+00,-1.52673563e+02]
,[-1.23887030e+02,4.83320647e+01,7.25620139e+00,-1.38735114e+02]
,[-1.24942047e+02,5.30095401e+01,6.82221332e+00,-1.40796800e+02]
,[-1.20602821e+02,5.58398231e+01,1.79432640e+01,-1.40754141e+02]
,[-1.17607356e+02,4.33709080e+01,1.52732379e+01,-1.39059899e+02]
,[-1.11608923e+02,4.78531183e+01,1.52791234e+01,-1.35239211e+02]
,[-1.15535840e+02,4.31222515e+01,1.51011062e+01,-1.35720660e+02]
,[-1.09493803e+02,5.24751062e+01,9.59082941e+00,-1.30935042e+02]
,[-1.12249159e+02,4.79570868e+01,1.08467786e+01,-1.32320716e+02]
,[-1.08684629e+02,4.38866325e+01,1.69638742e+01,-1.21562665e+02]
,[-1.19781589e+02,5.30909826e+01,1.64061494e+01,-1.19365234e+02]
,[-1.20903800e+02,5.41852972e+01,1.38909365e+01,-1.24405413e+02]
,[-1.13484604e+02,5.80763324e+01,1.64411780e+01,-1.23496382e+02]
,[-1.18082001e+02,5.45704333e+01,4.05650201e+00,-1.06479653e+02]
,[-1.17333541e+02,4.06103941e+01,-5.85239836e-01,-1.06256578e+02]
,[-1.16238700e+02,4.45298626e+01,-1.49502089e+00,-1.01912939e+02]
,[-1.16119368e+02,4.70432295e+01,5.97334323e+00,-9.55169590e+01]
,[-1.14140165e+02,3.85257756e+01,6.03893387e+00,-9.31802723e+01]
,[-1.13253334e+02,3.97256308e+01,8.48213111e+00,-9.55514642e+01]
,[-1.17216749e+02,4.27150782e+01,4.82415240e+00,-1.06798803e+02]
,[-1.13988886e+02,3.89482833e+01,6.05241237e+00,-1.01055754e+02]
,[-1.17625642e+02,4.18933566e+01,2.70073162e+01,-1.00445427e+02]
,[-1.10229876e+02,4.68492662e+01,2.00483627e+01,-1.05981948e+02]
,[-1.19125924e+02,5.33433200e+01,1.73712689e+01,-1.02615465e+02]
,[-1.12864522e+02,5.98774730e+01,2.50574926e+01,-8.81764094e+01]
,[-1.07254821e+02,5.76309219e+01,2.57594074e+01,-8.17742259e+01]
,[-1.20285495e+02,5.49519592e+01,3.09581278e+01,-7.55709703e+01]
,[-1.20181000e+02,5.56985734e+01,3.27175371e+01,-8.12932420e+01]
,[-1.13342595e+02,4.53476118e+01,3.14346543e+01,-7.77921020e+01]
,[-1.14528275e+02,4.11394240e+01,3.14321915e+01,-7.26338768e+01]
,[-1.15188769e+02,4.91375298e+01,3.53004128e+01,-7.53462542e+01]
,[-1.15839982e+02,3.02115364e+01,3.43353284e+01,-6.24551834e+01]
,[-1.10764040e+02,3.51683628e+01,2.78622473e+01,-7.71810681e+01]
,[-1.06823216e+02,2.63683838e+01,3.90062091e+01,-7.26262240e+01]
,[-1.12001219e+02,3.16582348e+01,2.98140886e+01,-6.23370297e+01]
,[-9.89795668e+01,3.00061342e+01,4.00155967e+01,-6.49789924e+01]
,[-1.04642746e+02,2.88656649e+01,3.69975729e+01,-5.97217267e+01]
,[-9.97784702e+01,4.13349953e+01,4.08313593e+01,-7.01615601e+01]
,[-9.99376305e+01,3.69953673e+01,3.76289204e+01,-5.80944223e+01]
,[-1.01590817e+02,3.69507048e+01,2.84580660e+01,-4.96162725e+01]
,[-1.00489787e+02,4.25106207e+01,2.92633236e+01,-5.51598018e+01]
,[-1.02749912e+02,3.29937743e+01,2.73859169e+01,-4.83487187e+01]
,[-1.05029989e+02,3.89292231e+01,2.32573100e+01,-5.04677749e+01]
,[-1.02617359e+02,3.66572856e+01,2.40146931e+01,-5.93733763e+01]
,[-1.08753253e+02,3.84654148e+01,2.52615698e+01,-5.61475777e+01]
,[-1.01383282e+02,2.53139814e+01,4.12234568e+01,-5.81657432e+01]
,[-9.51318173e+01,-3.85520415e+00,2.68952309e+01,-5.50547563e+01]
,[-9.30361074e+01,9.88531523e+00,3.68118319e+01,-3.33967473e+01]
,[-9.45642904e+01,4.02369367e+01,3.89445881e+01,-4.79980207e+01]
,[-7.23462200e+01,3.22259678e+01,3.74135560e+01,-6.17085574e+01]
,[-8.88906974e+01,2.92320028e+01,7.07425311e+01,-8.26243854e+01]
,[-8.20542956e+01,4.77730794e+01,6.53424648e+01,-1.11967449e+02]
,[-8.97721523e+01,5.77501843e+01,7.61223991e+01,-9.82442154e+01]
,[-1.09626775e+02,7.99320897e+01,7.83591340e+01,-1.02062258e+02]
,[-9.39917195e+01,6.68926797e+01,1.02824868e+02,-1.06900362e+02]
,[-6.94571963e+01,4.70704727e+01,1.08698420e+02,-9.56183800e+01]
,[-5.49775139e+01,1.12012155e+01,9.70537359e+01,-7.84018749e+01]
,[-6.68846873e+01,4.31594893e+01,9.24756435e+01,-6.32815882e+01]
,[-6.00345759e+01,3.04409304e+01,1.16215983e+02,-5.97228547e+01]
,[-7.47396411e+01,2.84763564e+01,1.04085332e+02,-5.52054562e+01]
,[-4.91462447e+01,5.52110570e+00,1.31118949e+02,-7.63567608e+01]
,[-3.36834532e+01,-6.48897154e+00,1.28723131e+02,-5.66028787e+01]
,[-1.48947771e+01,-1.65066109e+01,9.92523370e+01,-6.70570276e+01]
,[-6.57026839e+00,1.36902143e+01,1.21240571e+02,-8.93602046e+01]
,[-3.07334572e+01,6.97246227e+00,1.40115293e+02,-9.70343825e+01]
,[-4.36878195e+01,-1.82749349e+01,1.40587653e+02,-1.08554668e+02]
,[-4.04407515e+01,-5.42025282e+01,1.36877660e+02,-1.06169868e+02]
,[-3.53547567e+01,-6.69271683e+01,1.43034084e+02,-1.09142954e+02]
,[-1.60267777e+01,-6.56917849e+01,1.34868834e+02,-9.91139119e+01]
,[-5.80546196e+01,-7.58968510e+01,1.60243726e+02,-9.81375701e+01]
,[-7.88980979e+01,-6.82677577e+01,1.55365293e+02,-1.01642368e+02]
,[-6.20423618e+01,-5.94066850e+01,1.66687586e+02,-8.41798152e+01]
,[-5.10860573e+01,-5.63458312e+01,1.51714537e+02,-9.43973863e+01]
,[-2.12496511e+01,-7.78037974e+01,1.46955597e+02,-9.61583181e+01]
,[-1.24201909e+01,-3.81901339e+01,1.45903976e+02,-1.00726049e+02]
,[5.88863564e+00,-4.86284885e+01,9.86645803e+01,-1.03766724e+02]
,[-9.52547451e+00,-4.02962956e+01,1.07956818e+02,-9.43558987e+01]
,[2.95633727e+01,-2.62005384e+01,1.24617450e+02,-1.24959853e+02]
,[5.42413889e+01,-1.80529056e+01,9.97765333e+01,-1.14695053e+02]
,[5.10603245e+01,-1.53643579e+01,7.99783150e+01,-1.10277737e+02]
,[5.36404525e+00,-3.98644811e+01,7.31681651e+01,-1.03301643e+02]
,[3.70420828e+01,-4.91973841e+01,6.53032152e+01,-1.24979418e+02]
,[6.35639137e+01,-5.23166457e+01,7.64222124e+01,-1.04634908e+02]
,[5.98231775e+01,-7.27259208e+01,4.09127060e+01,-1.17683766e+02]
,[6.43952551e+01,-6.22127850e+01,3.35337794e+01,-1.12411281e+02]
,[6.20074730e+01,-5.89912674e+01,2.67055767e+01,-1.16667672e+02]
,[8.07347721e+01,-5.67106666e+01,3.12970656e+01,-1.52020673e+02]
,[6.14170210e+01,-7.62653237e+01,1.21665069e+01,-1.78635181e+02]
,[3.30895390e+01,-4.52750416e+01,3.37078159e+00,-1.92832904e+02]
,[1.86508486e+01,-3.63955957e+01,2.83564359e+01,-1.79879157e+02]
,[4.00191077e+01,-5.66511114e+01,5.25302435e+01,-1.98462847e+02]
,[3.19983534e+01,-6.13138575e+01,1.92645387e+01,-2.23207219e+02]
,[6.63104974e+00,-6.97801690e+01,1.92739398e+01,-2.09333772e+02]
,[1.32938677e+00,-8.24389771e+01,6.99513921e+00,-2.40779018e+02]]

b011 = [[-5.45883613e+01,-2.19456290e+01,2.26575829e+01,6.47091964e+01]
,[-4.88899956e+01,-1.89034829e+01,1.63598680e+01,6.27321602e+01]
,[-5.68260708e+01,-1.88317154e+01,2.26247765e+01,7.49022873e+01]
,[-5.59423540e+01,-1.16369289e+01,2.15312541e+01,7.36835237e+01]
,[-5.51890522e+01,-1.27899008e+01,7.44274868e+00,6.64160778e+01]
,[-4.52619263e+01,-1.53480645e+01,1.76780505e+01,6.39111742e+01]
,[-4.87364337e+01,-1.37734266e+00,1.25904432e+01,6.47556808e+01]
,[-4.74590719e+01,-1.88018875e+01,1.35755501e+01,6.26688933e+01]
,[-4.53773260e+01,-1.40505536e+01,9.35069397e+00,5.45036096e+01]
,[-4.53462868e+01,-9.91860699e+00,8.89921697e+00,5.76180174e+01]
,[-5.08185067e+01,-1.27238151e+01,4.34272535e+00,5.23688466e+01]
,[-5.25537062e+01,-1.50626377e+01,6.50180458e+00,5.09800133e+01]
,[-5.32352980e+01,-2.00131349e+01,2.22606306e+01,4.89981072e+01]
,[-5.26579625e+01,-8.13130050e+00,6.53237329e+00,5.13840098e+01]
,[-4.54078304e+01,4.24442888e-01,1.31229898e+01,5.23363113e+01]
,[-4.35775522e+01,7.44494411e+00,3.75897460e+00,5.30953034e+01]
,[-5.10721368e+01,1.06481840e+01,5.65580302e+00,4.87708688e+01]
,[-4.41611260e+01,4.70871056e+00,9.88691576e+00,4.32078689e+01]
,[-4.99606486e+01,9.28260788e+00,3.30505703e+00,5.13098717e+01]
,[-4.83911411e+01,1.73685140e+01,9.57737126e+00,4.53603484e+01]
,[-4.25010502e+01,1.26152515e+01,-2.73416244e+00,4.66485989e+01]
,[-4.28698978e+01,7.83438063e+00,-1.06517339e+01,4.73086356e+01]
,[-4.05893849e+01,1.17422922e+01,1.07816152e+01,3.47540059e+01]
,[-3.15997660e+01,8.71550998e+00,1.27202224e+01,4.42306314e+01]
,[-4.67609936e+01,-2.45721392e+00,2.21871103e+00,3.81754707e+01]
,[-5.51770395e+01,4.45965036e+00,-3.81644398e+00,3.59850772e+01]
,[-5.44982630e+01,-1.23218837e+01,1.16070165e+00,3.49589654e+01]
,[-4.55005403e+01,-6.45633813e+00,-3.30234024e+00,3.94505908e+01]
,[-5.18724224e+01,-5.41116385e+00,-5.22980683e+00,4.29048988e+01]
,[-5.23341958e+01,-8.41385708e+00,-9.07548240e+00,3.98818021e+01]
,[-4.22056514e+01,-3.58447950e+00,-9.45324679e+00,3.95427832e+01]
,[-5.02627109e+01,-1.05910755e+01,-1.69342039e+01,3.69777253e+01]
,[-5.65501731e+01,-9.88576291e+00,-8.82940878e+00,2.83101445e+01]
,[-5.89527794e+01,-2.12503503e+01,-8.77627126e+00,3.05222575e+01]
,[-4.49257090e+01,-3.91964638e+00,2.70192506e+00,2.52054707e+01]
,[-4.45149952e+01,-8.92954871e+00,3.60142643e+00,3.11247342e+01]
,[-3.52528513e+01,-7.76346179e+00,6.31481123e+00,1.85597192e+01]
,[-3.46589788e+01,-1.45183567e+01,-2.16203400e+00,2.42443103e+01]
,[-3.92351315e+01,-4.09954005e+00,-4.56264312e+00,1.69523338e+01]
,[-3.25607451e+01,-1.65110394e+01,-1.18789805e+00,1.71296244e+01]
,[-2.88702258e+01,-6.86558834e+00,-3.18491081e+00,1.57734093e+01]
,[-3.52768670e+01,-1.01469714e+01,-5.08864456e-01,1.85149148e+01]
,[-3.45504266e+01,-1.36883026e+01,6.94336827e+00,1.93198802e+01]
,[-3.48035473e+01,-1.41619475e+01,6.15296468e+00,2.14166381e+01]
,[-3.47592897e+01,-1.19343903e+01,1.01799976e+01,2.95374938e+01]
,[-3.30246201e+01,-8.33942786e+00,3.45802544e+00,2.91109359e+01]
,[-2.87671319e+01,-8.32169088e+00,4.11676163e+00,3.26459864e+01]
,[-2.65066113e+01,-8.32069188e-01,-1.19502274e+01,3.97125130e+01]
,[-3.70143167e+01,-1.18598056e+01,-6.07796996e+00,2.93427859e+01]
,[-3.20630292e+01,-4.34535243e+00,-1.24119331e-01,3.92374649e+01]
,[-3.38610330e+01,-7.70782516e+00,-3.05236252e+00,2.33082054e+01]
,[-3.04384117e+01,-2.53003087e-01,6.09582345e+00,3.79337824e+01]
,[-2.48197215e+01,-7.11117177e+00,1.04727071e+01,3.27165483e+01]
,[-2.93323512e+01,-7.37449955e+00,6.15078615e+00,2.87919563e+01]
,[-2.99916047e+01,-5.35955470e+00,7.90772540e+00,1.77516690e+01]
,[-2.15551007e+01,-3.44164242e+00,1.01948130e+01,1.55498615e+01]
,[-2.07638805e+01,-8.26037530e+00,-2.02886301e+00,2.25834554e+01]
,[-1.43745015e+01,-7.28942024e+00,4.15484924e-01,1.24399549e+01]
,[-2.02369884e+01,-9.98963640e+00,1.54184324e+01,9.01005865e+00]
,[-1.93739894e+01,-1.36588755e+00,1.37167743e+01,9.60474881e+00]
,[-2.09095798e+01,-6.34786986e+00,3.02244145e+00,1.19166008e+01]
,[-2.37398677e+01,-1.03652956e+01,-3.31196079e+00,8.06310338e+00]
,[-1.84731691e+01,-3.71307409e+00,-3.01399421e+00,8.66182676e+00]
,[-2.00059476e+01,-5.47922687e+00,-8.24237557e+00,4.71078154e+00]
,[-6.97879947e+00,-3.54232133e+00,7.39415203e+00,5.57298911e+00]
,[-1.41246490e+01,-4.46330479e+00,3.83974905e+00,7.00270776e+00]
,[-1.63591167e+01,6.40982283e-01,2.16058839e+00,-6.15168606e+00]
,[-1.38479447e+01,-2.21870960e+01,6.05923142e-01,-1.09671369e+00]
,[-1.55403643e+01,-2.03008971e+01,5.14544741e+00,-5.76312334e+00]
,[-1.77519093e+01,-1.85872645e+01,8.22977412e+00,-1.22651180e+01]
,[-1.58690476e+01,-2.20107172e+01,1.49001854e+01,-5.34730050e+00]
,[-1.59845591e+01,-2.75477735e+01,1.02224701e+01,-4.78464384e+00]
,[-2.16948007e+01,-2.09949487e+01,-5.11598497e+00,-2.53176774e+00]
,[-7.16552937e+00,-2.58430033e+01,3.85946048e+00,-9.13196078e+00]
,[-4.78564655e+00,-2.17884380e+01,-4.32173748e+00,-3.42691593e+00]
,[-5.21686293e+00,-1.48664427e+01,-6.04663371e+00,-2.57444963e+00]
,[-7.30980400e+00,-1.10801054e+01,6.35847672e+00,2.54961313e+00]
,[-8.44390353e+00,-5.67578897e+00,-8.16923244e+00,-2.30104572e+00]
,[-7.02807191e+00,-8.75160018e+00,1.16657900e+00,-5.28275224e+00]
,[-8.51457020e-01,1.59747147e+00,-8.07100106e+00,-9.21941889e+00]
,[-3.90257742e+00,-5.21508860e+00,4.53707626e+00,-7.22095881e+00]
,[-4.94259280e+00,-2.02853654e+00,1.25647133e+01,-9.12278449e+00]
,[-7.20856246e+00,-1.53038016e+01,9.05596579e+00,1.18707073e+00]
,[3.69564944e-01,-7.05387543e-01,4.00832060e+00,1.44431849e+00]
,[-8.16892185e+00,-1.21184448e+01,1.18402647e+01,-1.19466815e+01]
,[-7.25763490e+00,-7.25275895e+00,1.19946618e+01,-1.70685714e+01]
,[-1.98242150e+01,-9.69464808e+00,1.08470167e+01,-1.24707280e+01]
,[-1.32587423e+01,-8.45585325e+00,1.64624124e+01,-1.74051528e+01]
,[-5.94328813e+00,1.21044509e-01,1.27465162e+01,-1.88156981e+01]
,[-8.33369307e+00,-2.32571681e-01,1.29334027e+01,-1.57401517e+01]
,[-7.37994678e+00,-3.54953592e+00,5.97544773e+00,-1.83064376e+01]
,[-6.43060272e+00,7.68713540e+00,1.17321383e+01,-1.72457361e+01]
,[-1.08538902e+01,-3.49103042e+00,1.76726599e+01,-1.85331141e+01]
,[-9.52386561e+00,-1.56980755e+00,1.77265159e+01,-2.21461277e+01]
,[-3.01886486e+00,-7.54748587e+00,1.79441704e+01,-3.81804538e+01]
,[-1.14055294e+00,-7.49024076e+00,1.29139332e+01,-2.07965539e+01]
,[-6.48935701e+00,-9.31617335e+00,2.18029490e+01,-3.28635922e+01]
,[-8.01696077e+00,-8.60905606e+00,2.33983762e+01,-2.49919517e+01]
,[1.31797599e+00,-3.08420925e+00,2.80366462e+01,-1.53345625e+01]
,[-5.34486816e+00,-6.24389878e+00,2.33286027e+01,-1.00754670e+01]
,[-6.94203448e+00,1.09970269e+00,2.22567581e+01,-1.12721836e+01]
,[-9.15212659e-01,2.49666722e+00,2.23213083e+01,-9.49345153e+00]
,[-8.51398258e+00,2.29654274e+01,2.37681004e+01,-8.82627268e+00]
,[-6.88858073e+00,6.99648429e+00,2.37475735e+01,-7.07292977e+00]
,[6.36151815e+00,1.71630222e+01,1.58241934e+01,-4.59113863e+00]
,[1.60534308e+00,1.40242149e+01,8.87699720e+00,-3.47307857e+00]
,[7.41472703e+00,1.08489577e+01,1.44065926e+01,-1.29398881e+01]
,[1.27497234e+01,1.32870401e+01,1.60100752e+01,-9.54274318e+00]
,[-5.57778516e-01,1.71938105e+01,2.44010070e+01,-7.35401424e+00]
,[4.49975723e+00,1.70165033e+01,2.05099025e+01,-8.32514609e+00]
,[8.00279979e+00,3.59985948e+00,1.77885944e+01,-2.59192014e+00]
,[8.73810390e+00,7.77843003e+00,1.10465321e+01,-7.12934362e-01]
,[1.67007314e+01,2.41321479e+01,1.09059619e+01,-6.03520760e-01]
,[1.41152974e+01,6.95570921e+00,8.36660904e+00,2.29996156e+00]
,[2.33849077e+01,2.10937806e+01,1.57160156e+01,3.55777191e+00]
,[1.86184841e+01,1.55588690e+01,1.49129383e+01,6.57143436e+00]
,[1.55355272e+01,7.02976250e+00,1.01706838e+01,4.50143122e+00]
,[2.05413872e+01,1.79860237e+01,1.78338316e+01,2.80586221e+00]
,[1.25166695e+01,6.41085129e+00,2.48737712e+01,1.25339602e+01]
,[1.53677086e+01,-4.28930463e-01,7.78078652e+00,9.92918636e+00]
,[2.05630534e+01,-8.20051283e-02,1.34633644e+01,9.91165503e+00]
,[9.62823254e+00,3.34905714e+00,1.25089821e+01,1.18339779e+01]
,[1.60429072e+01,-4.88033364e+00,9.99972515e+00,1.76107121e+01]
,[1.18803670e+01,-1.29282547e+01,-3.67612004e+00,1.52283871e+01]
,[1.57938913e+01,-1.26272153e+01,-5.46790356e+00,1.69478008e+01]
,[1.14302603e+01,-1.32414142e+01,-6.83002586e+00,1.89664380e+01]
,[1.22070030e+01,-3.87749020e-01,-8.32095551e+00,1.16880447e+01]
,[1.26196488e+01,-9.78384594e+00,-1.84263232e+01,1.29845587e+01]
,[6.01745774e+00,-1.24255585e+01,-1.78578539e+01,8.37172042e+00]
,[9.76448169e+00,-1.09917602e+01,-1.88078198e+01,4.42012477e+00]
,[7.75504911e+00,-1.09164270e+01,-1.46685783e+01,2.44044809e+00]
,[1.02716371e+01,-2.52638699e+01,-7.55718158e+00,-1.06851229e-01]
,[9.28468359e+00,-1.25951825e+01,-1.58793281e+01,-4.68012806e+00]
,[4.85597747e+00,-1.49973596e+01,-1.28154762e+01,3.07123590e+00]
,[1.08959437e+01,-1.92088179e+01,-1.31945249e+01,-9.07611666e+00]
,[2.14458071e+01,-1.39738476e+01,-1.51094862e+01,-1.75087262e+01]
,[2.60788490e+01,-2.40054783e+01,4.45213314e-01,-1.41251442e+01]
,[2.22780607e+01,-3.28102645e+01,-1.68074511e+00,-7.28579811e+00]
,[2.92731259e+01,-3.46306331e+01,-1.13595913e+01,-8.87716864e+00]
,[2.95703266e+01,-3.08829604e+01,-2.74809990e-02,-1.71516382e+01]
,[2.30929791e+01,-3.97653585e+01,-8.53627061e+00,-1.00317389e+01]
,[1.59369735e+01,-3.21782291e+01,-7.34324305e+00,-2.12144329e+01]
,[2.25256409e+01,-3.73619880e+01,-1.27678108e+01,-1.48256960e+01]
,[2.64683004e+01,-3.32457738e+01,-3.68897482e-01,-2.83227477e+01]
,[2.89427005e+01,-4.61506696e+01,-8.69050509e+00,-1.80929531e+01]
,[2.05834012e+01,-4.56290305e+01,-1.26172423e+01,-2.37566659e+01]
,[2.49835511e+01,-4.15150566e+01,-6.22459043e+00,-1.98547667e+01]
,[2.82108909e+01,-3.15202294e+01,-1.26017907e+01,-2.11133751e+01]
,[2.78623975e+01,-3.79674723e+01,-2.02088369e+01,-2.25649286e+01]
,[4.05138925e+01,-3.77200459e+01,-1.30107284e+01,-2.18337786e+01]
,[3.99217298e+01,-4.39619436e+01,-1.45213530e+01,-1.89803676e+01]
,[3.25121035e+01,-3.18110294e+01,-1.95106091e+01,-1.96619328e+01]
,[3.85606234e+01,-2.44091975e+01,-9.24104315e+00,-9.34268848e+00]
,[4.50756340e+01,-3.90908328e+01,-1.25356831e+01,-9.10831746e+00]
,[3.91298053e+01,-2.81670594e+01,-1.49652704e+01,-1.11231081e+01]
,[5.16627635e+01,-3.40450473e+01,-1.15740097e+01,-1.27732010e+01]
,[5.33952564e+01,-3.28913874e+01,-1.54613406e+01,-1.18972423e+01]
,[5.17535092e+01,-2.66507287e+01,-1.84074004e+01,-2.33958983e+01]
,[4.61269578e+01,-3.03924215e+01,-1.84412553e+01,-6.97119505e+00]
,[5.20064551e+01,-3.33061443e+01,-2.24915768e+01,-5.67020766e+00]
,[5.21332301e+01,-2.12447360e+01,-1.55975297e+01,-1.04518774e+01]
,[4.17497132e+01,-2.46884270e+01,-2.09407707e+01,-6.37895615e+00]
,[4.32859736e+01,-2.45915272e+01,-1.23700977e+01,-7.59998349e-01]
,[3.61288971e+01,-1.34501924e+01,-9.96128453e-01,-3.77869221e+00]
,[3.06521770e+01,-2.00203864e+01,2.45380902e+00,4.64186768e+00]
,[3.55680515e+01,-2.39900567e+01,3.72880140e+00,-4.01895149e+00]
,[3.95378457e+01,-1.78172369e+01,3.46235100e+00,5.27783648e-01]
,[2.78179810e+01,-2.27378208e+01,-2.31048657e+00,5.02301768e+00]
,[2.86274876e+01,-1.24657188e+01,-1.98137094e+00,-2.92819503e+00]
,[4.18047465e+01,-2.07415824e+01,-1.66003456e+01,-6.04161450e+00]
,[4.18892397e+01,-4.21597332e+00,-1.21667577e+01,-4.62979018e+00]
,[3.94785528e+01,-1.58657153e+01,-1.94218839e+01,-3.18523043e+00]
,[3.20002150e+01,-1.14279120e+01,-9.67136121e+00,2.62032666e+00]
,[3.79513382e+01,-8.19792029e+00,-1.38925371e+01,1.69723743e+00]
,[3.76507042e+01,-1.25490481e+01,-1.44335445e+01,8.85575833e+00]
,[3.54011298e+01,-1.36416251e+01,-1.88765161e+01,1.17946595e+01]
,[2.86897909e+01,-8.61562824e+00,-1.07269675e+01,9.49480228e+00]
,[2.65295089e+01,-1.70189973e+01,-1.20414246e+01,9.34609186e+00]
,[3.48465014e+01,-1.64798809e+01,-7.68308913e+00,7.08457132e+00]
,[2.94430030e+01,-1.18239568e+01,-8.91107620e+00,9.23228621e+00]
,[2.20132100e+01,-1.50605094e+01,-2.30267207e+00,7.31570383e+00]
,[2.60510936e+01,-9.86474185e+00,4.19186948e-01,9.15923448e+00]
,[2.52456118e+01,-8.24296169e+00,2.75733234e+00,2.40133496e+00]
,[1.21437821e+01,-1.39712099e+01,-5.32245556e+00,-2.21979104e+00]
,[2.13093177e+01,-8.27488477e+00,-1.91434217e+01,2.49154949e+00]
,[2.80776725e+01,1.13217481e+01,-8.48891357e+00,6.33039411e+00]
,[2.69170658e+01,1.14919693e+01,-1.45051725e+01,5.58540478e+00]
,[2.24077332e+01,1.00061904e+00,-3.69306037e+00,-8.05535525e+00]
,[1.67119581e+01,9.14671331e+00,-4.34680315e+00,1.15334721e+01]
,[9.67534402e+00,-5.17684486e+00,-1.21664777e+01,-1.68145870e+00]
,[1.20080159e+01,2.34279224e-01,-1.11258911e+01,3.07650344e+00]
,[4.46305866e+00,9.19598912e-01,-1.40165448e+01,1.36024400e+00]
,[7.44848532e+00,7.69511072e+00,-1.73542319e+01,5.20696236e-01]
,[1.48358233e+01,-4.18306608e-01,-1.31735489e+01,7.12836054e+00]
,[2.39849414e+01,-3.95048591e+00,-2.05010061e+01,-3.43894741e-01]
,[1.37280300e+01,-3.10747894e+00,-9.30177359e-01,4.60383531e+00]
,[2.23560124e+01,-2.33436399e+00,-6.88717211e+00,-4.51980357e+00]
,[2.40873147e+01,-1.00699414e+01,2.63665344e+00,3.76220642e+00]
,[1.78506069e+01,3.04775177e+00,-3.96221958e+00,-6.02785799e+00]
,[8.32750224e+00,1.09282511e+01,-9.40899172e+00,-7.46660450e+00]]

b012 = [[2.70392163e+01,-1.87966182e+01,5.76846397e+01,-6.24075619e+01]
,[1.70556118e+01,-1.97942374e+01,6.03194580e+01,-4.54206256e+01]
,[1.72772051e+01,-1.64326420e+01,6.14666639e+01,-4.52518908e+01]
,[3.56115810e+01,-8.05064600e+00,5.78112592e+01,-4.90280979e+01]
,[2.24370778e+01,-1.54654471e+01,6.45063511e+01,-3.80000473e+01]
,[2.26425590e+01,-1.03907332e+01,4.97481348e+01,-4.20817489e+01]
,[2.73418034e+01,-1.23548635e+01,6.10339070e+01,-4.52785065e+01]
,[2.50935033e+01,-4.96523079e+00,5.26771734e+01,-4.87199768e+01]
,[2.24626744e+01,-5.44528720e+00,4.94195553e+01,-4.90465118e+01]
,[2.66605262e+01,-1.83728613e+01,4.95208802e+01,-4.66657629e+01]
,[2.08202788e+01,-1.35234232e+01,4.37683548e+01,-4.44663497e+01]
,[1.43095924e+01,-1.52719659e+01,4.12825044e+01,-4.19671010e+01]
,[1.35831129e+01,-1.90555088e+01,4.12141472e+01,-3.74176030e+01]
,[1.61686935e+01,-1.35685255e+01,4.09657760e+01,-3.76157575e+01]
,[1.23659886e+01,-1.29443829e+01,3.83865576e+01,-4.29331480e+01]
,[6.87824492e+00,-1.30914995e+01,3.70159222e+01,-4.10660255e+01]
,[1.95978969e+00,-1.42480253e+01,2.46112933e+01,-3.80444755e+01]
,[-1.76024016e+00,-2.23975138e+01,2.54218862e+01,-3.83053568e+01]
,[-6.13487963e+00,-2.71337504e+01,1.46904008e+01,-3.05615623e+01]
,[-3.45295911e+00,-2.24656339e+01,1.32069202e+01,-2.64471368e+01]
,[8.32000635e+00,-2.02553213e+01,1.21824824e+01,-3.04037295e+01]
,[-1.77581168e+00,-2.08709665e+01,8.04476552e-01,-1.55390105e+01]
,[4.52888520e+00,-2.02071617e+01,4.57887628e+00,-1.65239802e+01]
,[8.47251114e+00,-2.75311132e+01,1.26544741e+01,-2.40965902e+01]
,[8.13054858e+00,-3.17527750e+01,1.42382211e+01,-2.85634852e+01]
,[-1.64296447e+00,-3.88257475e+01,1.13644612e+01,-3.27611523e+01]
,[4.52419226e-01,-2.52506972e+01,7.73472607e+00,-3.07861646e+01]
,[3.23324044e+00,-2.37385335e+01,-1.41424207e-01,-3.08113964e+01]
,[3.67731893e+00,-2.33455654e+01,3.87057793e+00,-3.70367369e+01]
,[-1.16096493e+01,-2.43742266e+01,2.31765018e+01,-4.05851282e+01]
,[-3.05640183e+00,-2.21762063e+01,3.29330590e+00,-3.16088790e+01]
,[-1.65133347e+00,-2.49430866e+01,9.39355201e+00,-3.30166798e+01]
,[8.23329255e+00,-3.01363917e+01,1.22699212e+01,-4.27046170e+01]
,[-3.86142947e+00,-2.92732999e+01,1.03700913e+01,-3.61455321e+01]
,[-2.20224038e+01,-2.80772998e+01,8.48804532e+00,-4.23522968e+01]
,[-1.39376605e+01,-3.07399769e+01,1.23432758e+01,-2.57227655e+01]
,[-2.21599189e+01,-2.26580477e+01,3.95507714e+00,-2.27506888e+01]
,[-1.30081230e+01,-2.73446897e+01,6.93883600e+00,-2.34381283e+01]
,[-6.29450018e+00,-2.97024919e+01,1.30972207e+01,-2.72870819e+01]
,[-3.62233021e+00,-2.00896671e+01,8.70299844e+00,-2.12657477e+01]
,[-1.02118508e+01,-1.87066024e+01,9.45775227e+00,-1.93471435e+01]
,[-1.83997670e+01,-1.72782600e+01,1.65004190e+01,-8.31113338e+00]
,[-2.20632001e+01,-1.97626822e+01,4.12656843e+00,-8.30618888e+00]
,[-1.65718506e+01,-1.35521757e+01,4.25565934e+00,-5.17106509e+00]
,[-8.84311095e+00,-9.20463959e+00,1.12271266e+01,-8.07533532e+00]
,[-1.20018890e+01,-2.40240454e+00,1.57460456e+01,-1.61520371e+01]
,[-1.15011136e+01,-1.03847059e+01,8.27465165e+00,-1.76612115e+01]
,[-1.39143887e+01,-1.12697983e+01,5.19759222e+00,-1.35568181e+01]
,[-1.30985476e+01,-1.49099409e+01,1.04931750e+01,-8.36964805e+00]
,[-1.76183426e+01,-1.23492577e+01,7.76295282e+00,-1.93282547e+01]
,[-3.22308194e+00,-2.12412372e+01,1.00578205e+01,-9.65454524e+00]
,[-4.80837124e+00,-1.50131492e+01,5.86446165e+00,-2.17107019e+01]
,[-1.25585817e+01,-1.17223741e+01,1.30914964e+01,-2.45678456e+01]
,[-1.07150288e+01,-6.90524953e+00,1.57925115e+01,-1.67656360e+01]
,[-1.24572914e+01,-1.49912653e+01,8.97005231e+00,-2.36634452e+01]
,[-1.10589652e+01,-9.07748546e+00,1.10368485e+01,-1.46765123e+01]
,[-4.75780794e+00,-1.65428803e+01,1.49231580e+01,-1.39818207e+01]
,[-1.28297388e+01,-2.24782462e+01,1.17177014e+01,-1.07155875e+01]
,[-9.37410996e+00,-2.11854111e+01,2.10963974e+01,-5.78554292e+00]
,[-1.22237814e+01,-2.02859001e+01,2.04648362e+01,1.99812265e-01]
,[-1.64222848e+01,-1.83966873e+01,1.61834667e+01,-5.98233257e+00]
,[-1.43231410e+01,-2.36076746e+01,1.26570555e+01,-6.70877339e+00]
,[-1.32147704e+01,-1.64371793e+01,1.06526772e+01,-9.45625478e+00]
,[-1.61999527e+01,-2.37104425e+01,1.74251852e+01,-5.95993627e+00]
,[-1.09429619e+01,-2.88622145e+01,1.49872787e+01,3.40805438e+00]
,[-1.81757942e+01,-1.72354947e+01,1.62963564e+01,5.39882955e+00]
,[-2.07922871e+01,-2.50500524e+01,2.06931165e+01,-1.79266773e+00]
,[-2.25630278e+01,-2.48551931e+01,6.07369151e+00,-2.38131926e+00]
,[-2.02957742e+01,-3.07602260e+01,1.44327277e+01,1.54163598e+00]
,[-2.02453614e+01,-2.34920152e+01,6.60985971e+00,-4.93098001e+00]
,[-1.89722362e+01,-1.59585938e+01,7.79650734e+00,-8.58947342e+00]
,[-1.93809369e+01,-2.54790739e+01,4.97686271e+00,-1.20776692e+01]
,[-3.30247018e+01,-1.39871048e+01,-9.83631724e-01,-2.23947871e+01]
,[-3.03313249e+01,-7.11907737e+00,1.39341633e+01,-1.49017956e+01]
,[-3.95515611e+01,-1.41703000e+01,1.05535493e+01,-1.54473709e+01]
,[-3.74893118e+01,-7.05902475e+00,2.63178804e+00,-1.10906862e+01]
,[-3.58191913e+01,-5.91581723e+00,2.91708491e+00,-1.24285618e+01]
,[-4.09093954e+01,1.22102023e+00,7.98126544e+00,-1.07967766e+01]
,[-3.99225287e+01,1.05808036e+01,6.91760486e+00,-7.69613937e+00]
,[-3.25667780e+01,-1.11049397e+00,4.24283060e+00,-8.68673389e+00]
,[-3.13781599e+01,-2.66433264e+00,2.28506677e+00,-3.67400341e+00]
,[-3.35939577e+01,6.08854470e+00,9.09503821e+00,-3.46467393e+00]
,[-2.36731745e+01,3.53274979e-01,6.15183498e+00,-3.59839665e+00]
,[-1.13111792e+01,2.32225147e-01,1.03069800e+00,1.24304684e+01]
,[-7.76000800e+00,1.12856174e+00,1.11089045e+01,4.15024311e+00]
,[-1.21986156e+01,-3.37171212e+00,-2.84377480e+00,9.70287280e+00]
,[-1.64614202e+01,4.26683601e+00,2.45871807e-01,2.54326463e+00]
,[-1.22673721e+01,1.31312109e+01,1.00521927e-01,6.28228574e+00]
,[-1.07554219e+01,9.86172216e+00,-4.26936336e+00,-5.55388806e+00]
,[-1.10228798e+01,4.07619218e+00,-5.86588394e+00,-1.07187081e+01]
,[-1.18468780e+01,1.26919280e+01,-8.07901904e+00,-5.50528545e+00]
,[-1.34333978e+01,9.67323537e+00,-3.36860662e+00,-1.57335828e+00]
,[-1.92954383e+00,9.34417896e+00,-5.59933616e+00,6.68796998e+00]
,[1.95783386e+00,8.01559598e+00,-9.19079753e+00,-1.94320763e-01]
,[1.34569004e+00,6.66951708e+00,-8.32968043e-01,-1.08104862e+01]
,[-2.53385745e-01,1.31117091e+01,-2.47534051e+00,-7.16060773e+00]
,[-2.53298171e+00,-3.66457899e+00,-2.49175848e+00,-6.61972019e+00]
,[2.60283434e+00,-1.81055422e+00,1.34678381e-01,-1.18721871e+01]
,[2.98416996e+00,5.56242359e-01,1.07584828e+01,2.60267421e+00]
,[-1.33427180e+00,1.11566329e+01,8.98840362e+00,-1.02564311e+01]
,[3.44506785e+00,3.92410444e+00,-1.51305576e+00,-1.37883771e+01]
,[-2.01134435e+00,4.74944353e+00,-1.71981957e+01,-1.16335138e+01]
,[1.26267203e+00,6.31313288e+00,-1.14552275e+01,-1.48510357e+01]
,[3.45223234e+00,8.20059427e+00,-8.51491083e+00,-1.14080566e+01]
,[-1.23108743e+01,-4.90410374e+00,-9.47993017e+00,-1.68731786e+01]
,[-8.57745360e+00,1.35950495e+01,-8.65975924e+00,-1.61592505e+01]
,[-1.45645364e+01,9.03409600e+00,-2.51836069e+01,-2.03022931e+01]
,[-5.77321064e+00,1.70063238e+01,-1.43935269e+01,-2.57886058e+01]
,[-9.15200545e+00,7.72272493e+00,-1.23751210e+01,-2.01529342e+01]
,[-1.62082493e+01,1.95619594e+00,-1.71732429e+01,-1.29350983e+01]
,[-8.69210643e+00,1.46552817e+01,-1.13065827e+01,-1.50125323e+01]
,[-1.60439110e+01,8.46537118e+00,-1.71465261e+01,-3.18304991e+01]
,[-1.88606168e+01,-1.74059817e+00,-1.86717456e+01,-1.61049139e+01]
,[-2.16547710e+01,5.52605995e+00,-2.20331908e+01,-2.59539621e+01]
,[-2.94250865e+01,9.46780248e+00,-1.81052131e+01,-3.15001056e+01]
,[-1.19472396e+01,8.51490107e+00,-1.06580421e+01,-2.18700802e+01]
,[-1.77048733e+01,-1.60242072e+00,-1.55951804e+01,-2.21781531e+01]
,[-2.05748841e+01,-2.61343351e+00,-3.77488396e+00,-1.55601667e+01]
,[-1.43654757e+01,-1.64850046e+00,-1.29016232e+01,-1.63546352e+01]
,[-2.41901411e+01,1.60528293e+00,-1.18166827e+01,-1.41053141e+01]
,[-2.08543673e+01,4.55433276e+00,-1.67143282e+01,-1.80363066e+01]
,[-2.98600771e+01,-1.90395718e+00,-1.63232441e+01,-1.17389549e+01]
,[-2.70065814e+01,-2.80245651e+00,-1.47776451e+01,-1.69558748e+01]
,[-3.57257309e+01,-1.42741683e+00,-1.78813230e+01,-1.75233820e+01]
,[-3.21481582e+01,-7.45214526e+00,-1.95794975e+01,-2.57744320e+01]
,[-3.54610954e+01,-1.86932554e+01,-1.66120946e+01,-1.91079730e+01]
,[-4.72363331e+01,-1.10084152e+01,-1.55288714e+01,-1.39497457e+01]
,[-3.59707603e+01,-3.20274886e+00,-1.47853972e+01,-6.43915182e+00]
,[-3.79450432e+01,-7.12757173e+00,-1.80383467e+01,-1.18970087e+01]
,[-3.15601349e+01,-7.55012745e+00,-1.66135382e+01,-1.94625311e+01]
,[-3.79096098e+01,-3.82985578e+00,-2.31927846e+01,-1.89139867e+01]
,[-3.37356427e+01,6.58407029e+00,-2.10215986e+00,-1.87022380e+01]
,[-3.48828871e+01,-5.23787427e+00,-1.26358907e+01,-1.86642707e+01]
,[-3.03174815e+01,-5.81377111e+00,-4.52563085e-02,-2.12993617e+01]
,[-3.54155333e+01,5.52464970e+00,-4.16278560e+00,-2.17640823e+01]
,[-4.00525597e+01,-4.59546424e-01,-7.50204612e+00,-2.17175602e+01]
,[-3.82596011e+01,6.76766943e+00,-2.17007713e+00,-2.59340168e+01]
,[-3.89985373e+01,2.09237660e+00,-1.77514782e+00,-1.47996969e+01]
,[-3.22012956e+01,-6.04495563e+00,3.75676973e-01,-1.34405612e+01]
,[-3.48424833e+01,-3.41915649e+00,3.69491640e+00,-1.87310611e+01]
,[-4.31784205e+01,-7.37013941e+00,8.90393924e+00,-1.68601456e+01]
,[-3.20428729e+01,-1.85594225e+00,4.24311928e+00,-1.34681802e+01]
,[-4.29812054e+01,1.51011268e-01,9.85515573e+00,-1.90240288e+01]
,[-2.97906132e+01,-3.60567658e+00,6.93674576e+00,-8.06770183e+00]
,[-2.64429003e+01,-4.33657385e+00,1.27211011e+01,-2.71668855e+01]
,[-3.22846263e+01,-1.57227343e+00,5.66521435e+00,-2.67770984e+01]
,[-3.15612829e+01,8.46344699e+00,6.58293860e+00,-2.98161452e+01]
,[-3.16648621e+01,-1.29572942e+01,3.45461127e+00,-1.99606760e+01]
,[-2.76429695e+01,-2.12135283e+01,-2.76679942e+00,-1.09192447e+01]
,[-3.85830753e+01,-3.13960194e+01,1.78664310e+01,-1.51697397e+01]
,[-4.09456303e+01,-2.19254882e+01,5.67988851e+00,-7.99486587e+00]
,[-4.94898547e+01,-1.38408571e+01,-3.31869077e+00,-3.99901162e+00]
,[-3.82790666e+01,-2.89945509e+01,-3.34131309e+00,-6.31639190e+00]
,[-3.66811351e+01,-2.35259557e+01,2.21002951e+00,-5.19011029e-01]
,[-2.70524812e+01,-3.35945402e+01,6.17427663e+00,-3.13556015e+00]
,[-3.03997379e+01,-2.90073235e+01,-5.79293992e+00,-1.82703147e+01]
,[-3.52341182e+01,-2.84228553e+01,-1.16872131e+01,-8.85537958e+00]
,[-2.57410458e+01,-2.09641116e+01,-9.69781438e+00,-1.14789723e+01]
,[-2.21075437e+01,-3.06396326e+01,-8.54091150e+00,-5.72595067e+00]
,[-2.03154550e+01,-1.68673760e+01,-6.92416100e+00,-3.79614725e+00]
,[-1.22571910e+01,-2.19578457e+01,-1.32025131e+00,-8.62280546e+00]
,[-4.80674516e+00,-3.21429917e+01,-6.37417929e+00,-2.00641955e+01]
,[-8.30568051e+00,-2.38888198e+01,-7.10374990e+00,-1.27127732e+01]
,[1.91571615e+00,-2.96642832e+01,-8.26358512e+00,-2.29575694e+01]
,[2.57464906e+00,-2.50559031e+01,-1.01694138e+01,-2.79933269e+01]
,[-9.11157334e+00,-3.22106678e+01,-1.17848756e+01,-3.02721399e+01]
,[-6.42024467e+00,-2.93024108e+01,-1.58552496e+01,-2.26797698e+01]
,[-8.03278498e+00,-2.34694182e+01,-1.11787709e+01,-1.82784586e+01]
,[8.76097038e-01,-2.23044169e+01,-2.69832998e+01,-1.78432234e+01]
,[-4.10300545e+00,-2.44038961e+01,-2.18079587e+01,-1.23269334e+01]
,[2.40539924e+00,-1.58172738e+01,-2.97051651e+01,-6.41493177e+00]
,[-6.84743696e+00,-1.59936338e+01,-2.21742978e+01,-2.94056990e+00]
,[-1.19966309e+01,-1.90219110e+01,-2.20775083e+01,2.95870767e+00]
,[-9.70577817e-01,-1.82960961e+01,-1.12660956e+01,1.25355711e+01]
,[4.41306600e+00,-9.44457766e+00,-1.67391521e+01,1.68985051e+01]
,[-2.90879594e+00,-1.60023523e+01,-9.38475657e+00,1.84784020e+01]
,[-2.48233899e+00,-9.51529492e+00,-1.46102094e+01,8.23116978e+00]
,[-4.44638856e+00,-5.98784461e+00,-1.28800414e+01,1.69413254e+01]
,[-1.07526890e+01,-7.69975960e+00,-8.52602087e+00,2.49359782e+01]
,[-6.00933776e+00,-1.76966424e+01,-5.07637720e+00,2.27871305e+01]
,[-1.81121193e+01,-1.18094716e+01,-1.27663845e+01,3.36489592e+01]
,[-1.63515931e+01,-1.44403896e+01,-6.86201788e+00,3.47134602e+01]
,[-1.49382711e+01,-1.93834939e+01,-1.22662824e+01,3.37208462e+01]
,[-1.60777064e+01,-1.51676959e+01,-1.55627163e+01,2.24763201e+01]
,[-1.87671097e+01,-7.50643531e+00,-4.14403477e+00,2.42384988e+01]
,[-2.04471345e+01,-1.27825851e+01,-1.54927364e+00,2.75968720e+01]
,[-2.63934737e+01,-8.62047072e+00,4.15415372e+00,1.77393413e+01]
,[-2.43693066e+01,-7.97665515e+00,8.47701161e+00,3.00974868e+01]
,[-3.40788189e+01,-1.00158897e+01,-4.54815483e+00,3.00000351e+01]
,[-2.92107753e+01,-1.61767803e+01,2.29164813e+00,3.10716898e+01]
,[-3.51948258e+01,-1.24984475e+01,6.61641614e-01,2.18703887e+01]
,[-2.71559229e+01,-1.21329428e+01,5.38739388e+00,3.17769525e+01]
,[-2.61057477e+01,-1.19303202e+01,1.63911251e+00,3.39032876e+01]
,[-3.18571971e+01,-2.37637943e+01,-4.75102103e+00,2.75387212e+01]
,[-2.97668128e+01,-2.94417001e+01,-7.75306568e+00,2.31805720e+01]
,[-2.32886605e+01,-2.74716048e+01,-2.69588911e+00,2.15901222e+01]
,[-1.72425691e+01,-1.89304172e+01,6.39960597e+00,2.89203966e+01]
,[-1.75049683e+01,-1.01025138e+01,1.79984340e+00,2.88209331e+01]
,[-8.14315478e+00,-1.77581416e+01,4.33312186e+00,2.95679186e+01]
,[-1.49500537e+01,-3.23357444e+01,-4.92768064e+00,3.02809334e+01]]

b111 = [[1.68950900e+01,-1.54109235e+01,6.20006849e+01,-6.86255239e+01]
,[2.95665398e+01,-1.87682541e+01,7.03904835e+01,-4.69330520e+01]
,[1.61842421e+01,-2.85341677e+01,5.85745519e+01,-4.42996675e+01]
,[1.12652448e+01,-2.11081004e+01,7.36508317e+01,-4.12084218e+01]
,[1.93480909e+01,-1.96613234e+01,6.35700608e+01,-3.85383223e+01]
,[1.50598764e+01,-1.97278828e+01,5.88892997e+01,-2.86104748e+01]
,[1.12271876e+01,-2.17750485e+01,5.20758353e+01,-3.58281656e+01]
,[9.13914447e+00,-2.02346911e+01,4.98572530e+01,-3.87741445e+01]
,[3.75307392e+00,-1.98971222e+01,4.02739502e+01,-4.32780135e+01]
,[8.23909749e+00,-2.67342804e+01,4.25196757e+01,-4.78239257e+01]
,[1.85620615e+01,-2.13899983e+01,3.79900166e+01,-4.50596335e+01]
,[1.17557279e+01,-2.49018267e+01,2.77759009e+01,-4.66700210e+01]
,[1.43471085e+01,-3.11497511e+01,3.26383831e+01,-5.92770663e+01]
,[2.18300071e-01,-2.59774956e+01,2.83298393e+01,-5.20608416e+01]
,[1.38427308e+01,-2.27175187e+01,2.67248092e+01,-3.93973614e+01]
,[8.20316993e+00,-1.81248716e+01,1.83745841e+01,-5.45556697e+01]
,[1.20726644e+01,-1.88709510e+01,1.91594886e+01,-4.81765162e+01]
,[6.89470208e+00,-2.65225506e+01,2.21939598e+01,-4.34625099e+01]
,[7.58599754e+00,-1.92206833e+01,1.60795579e+01,-4.70910165e+01]
,[2.79189251e+00,-2.67797544e+01,1.58815441e+01,-4.68315559e+01]
,[7.28645228e+00,-2.64810345e+01,1.80814437e+01,-4.96057997e+01]
,[-4.41161255e+00,-2.51203124e+01,1.49303098e+01,-4.74799803e+01]
,[-2.29879333e-01,-2.70371426e+01,1.93378007e+01,-5.77099011e+01]
,[6.79462082e+00,-2.47835803e+01,1.51405077e+01,-4.80618173e+01]
,[4.42329791e+00,-3.37249471e+01,1.94974624e+01,-4.06972381e+01]
,[1.25918521e+01,-3.09165423e+01,3.06497774e+01,-3.76077977e+01]
,[3.21756560e+00,-3.34463083e+01,2.07768306e+01,-3.19346324e+01]
,[5.40142977e+00,-3.83698015e+01,1.60236987e+01,-2.40708381e+01]
,[5.53120194e+00,-3.77804692e+01,2.31542505e+01,-1.85105135e+01]
,[1.11140449e+01,-3.09104743e+01,2.77911948e+01,-2.56069076e+01]
,[8.63748835e+00,-3.60173727e+01,2.76850831e+01,-1.97241111e+01]
,[7.91169031e+00,-3.45374631e+01,2.23649475e+01,-1.44915179e+01]
,[-8.14018440e-01,-2.68051954e+01,1.44095822e+01,-9.43451688e+00]
,[4.22428647e+00,-2.84645504e+01,2.25997132e+01,-1.10229426e+01]
,[-1.66710846e+00,-3.02608961e+01,2.18548985e+01,-1.44579383e+01]
,[-2.01527788e+00,-3.53053782e+01,1.05416169e+01,-2.88714636e+01]
,[-5.00553141e+00,-2.19891124e+01,1.42078402e+01,-8.59400643e+00]
,[-2.21966477e-01,-2.43860721e+01,1.82461777e+01,2.17511229e+00]
,[1.36526749e+01,-2.42224081e+01,2.28816126e+01,-1.52159239e+01]
,[1.03216157e+01,-1.30279285e+01,1.84877461e+01,-1.48758152e+00]
,[9.41139322e+00,-2.03161296e+01,2.00549043e+01,-2.70373612e+00]
,[1.39500653e+01,-1.85098412e+01,8.39474545e+00,-1.43254980e-01]
,[1.21476331e+01,-2.14194053e+01,1.42898206e+01,8.34355686e+00]
,[1.02619386e+01,-2.01748316e+01,1.61517529e+01,-1.00022657e-01]
,[-1.66131654e+00,-2.61357502e+01,1.23995897e+01,5.25578693e+00]
,[-1.26912731e+00,-2.82939336e+01,4.69985793e+00,-1.84583269e+00]
,[5.52132907e+00,-2.32335780e+01,7.83405321e+00,-6.39906926e+00]
,[2.04659036e+00,-2.89916899e+01,1.03799724e+01,2.04400930e+00]
,[1.81382226e+00,-2.96702030e+01,1.35157397e+01,-5.02798921e+00]
,[9.88651294e+00,-2.68791086e+01,1.20320927e+01,4.67995899e+00]
,[3.95934435e+00,-2.03658062e+01,1.16044307e+01,5.87470286e+00]
,[1.45075835e+01,-3.14801364e+01,4.93700999e-02,5.67871538e+00]
,[1.37645304e+01,-4.22550912e+01,5.67862297e-01,2.58122309e+00]
,[1.88385131e+01,-2.52645665e+01,3.47926098e-01,7.45102020e+00]
,[1.62552604e+01,-2.22786287e+01,5.95922529e-01,8.36977565e+00]
,[1.97340681e+01,-2.11199620e+01,1.01665767e+00,8.78061404e+00]
,[2.26440015e+01,-1.67553975e+01,-6.71124395e+00,-2.61760304e+00]
,[2.15161597e+01,-1.48728673e+01,-1.01245704e+01,-6.89735646e+00]
,[2.14500773e+01,-2.06401473e+01,-1.66943379e+01,-1.53828089e+01]
,[1.69283723e+01,-1.14395939e+01,-5.72343951e+00,-1.53567348e+01]
,[1.93360180e+01,-1.90525469e+01,-3.01682472e+00,-1.12379952e+01]
,[2.36807170e+01,-1.03462140e+01,-7.29371825e+00,-6.86429351e-01]
,[2.60919944e+01,-1.23559188e+01,-9.25787364e+00,-7.02082571e+00]
,[9.01859777e+00,-5.64178684e+00,-2.78784726e+00,-3.77577951e+00]
,[1.43569079e+01,6.96765161e+00,-2.20712124e+00,1.10033337e+00]
,[1.26958442e+01,3.32016871e+00,1.47357428e+00,-1.78926065e+00]
,[-1.44454655e+00,7.23082617e+00,2.54518090e-01,-5.17515214e+00]
,[-7.61007804e+00,-1.47591438e+00,5.32794150e+00,-5.10589988e+00]
,[-3.10289595e+00,-5.53960317e+00,1.35929520e+01,6.52640750e+00]
,[-9.76555514e+00,3.82670367e+00,1.45826640e+01,1.58345013e+00]
,[-1.58295500e+01,-8.62935554e+00,7.46048787e+00,-4.57577107e+00]
,[-1.18109228e+01,-9.59388871e+00,1.41271214e+01,8.89717240e+00]
,[-1.69688833e+01,-2.46476279e+00,1.21542161e+01,2.77170246e+00]
,[-2.60052836e+01,-1.00340944e+01,1.28257174e+01,1.31445320e+01]
,[-1.53486867e+01,-5.95404770e+00,1.88758377e+01,6.74729783e+00]
,[-1.87094836e+01,-4.86012275e+00,2.19427028e+01,-4.09048945e+00]
,[-1.29924544e+01,-3.28685816e+00,2.39332551e+01,-5.57949674e+00]
,[-2.07965042e+01,-1.15878257e+01,2.30901149e+01,-1.47623488e+01]
,[-2.02428314e+01,-2.75270358e+00,1.19965225e+01,-9.05145867e+00]
,[-1.05718294e+01,6.26355711e+00,1.40926685e+01,-3.68149727e+00]
,[-2.03778476e+01,7.69623894e+00,2.62489749e+01,-1.05554968e+01]
,[-3.20739454e+00,4.01283491e+00,1.74091010e+01,-6.54526183e+00]
,[-1.06515181e+01,-9.77597918e-02,2.95875830e+01,-1.58641961e+01]
,[-5.74056389e-01,-4.77959573e+00,3.05306641e+01,-1.03520481e+01]
,[1.02212911e+00,5.36995988e-01,1.83480598e+01,-1.18749655e+01]
,[-8.25143769e+00,5.63039074e-01,3.19761855e+01,-9.69562989e+00]
,[-4.64313599e+00,1.72857293e+01,3.88862307e+01,-5.00241572e+00]
,[-1.58834440e+01,2.62734819e+00,2.91398341e+01,-5.67140744e+00]
,[-4.60354299e+00,4.22514131e+00,1.96205135e+01,-1.04391320e+01]
,[-6.79045553e+00,8.58421712e+00,2.07280558e+01,-1.00809933e+01]
,[-9.39915623e+00,1.27971772e+01,2.84869048e+01,-2.05959677e+00]
,[-7.33567675e+00,8.59697727e+00,3.35999677e+01,-6.58847565e+00]
,[-2.18757231e+00,2.34872009e+00,3.61550310e+01,-3.22193908e+00]
,[-3.05118309e-01,2.84782733e+00,2.85959040e+01,2.02939314e+00]
,[-3.44551075e+00,-3.48922323e+00,4.12533005e+01,2.80720645e+00]
,[1.39879416e+00,4.40873559e-01,3.54725496e+01,2.22834333e+00]
,[-5.50191236e+00,-1.78836723e+00,3.34895459e+01,-5.22092485e+00]
,[-1.13504225e+01,8.37716952e+00,2.71017813e+01,1.92037426e+00]
,[-1.09237339e+01,8.49305871e+00,2.70845413e+01,-8.18340797e+00]
,[-1.46869409e+01,4.75435679e+00,2.27559304e+01,-4.13454648e+00]
,[-1.61235862e+01,3.22753079e-01,3.81376396e+01,-5.58343076e+00]
,[-1.24919881e+01,5.69110203e+00,3.91520274e+01,-1.23670123e+01]
,[-1.07008687e+01,9.79331997e+00,3.64575574e+01,-1.48021028e+01]
,[-1.47515179e+01,1.37373013e+00,3.96582574e+01,-1.94786902e+01]
,[-8.16621314e+00,4.34962953e+00,3.61225094e+01,-2.28137038e+01]
,[-1.34874940e+01,1.17614633e+01,4.31473753e+01,-1.43951258e+01]
,[-2.23488619e+00,4.14955289e-01,4.43343392e+01,-1.95596967e+01]
,[-6.03162451e+00,2.36873242e+00,5.46932919e+01,-1.40511696e+01]
,[-1.25283360e+01,5.19627978e+00,5.92028981e+01,-1.68978789e+01]
,[9.22593387e-01,9.45979768e+00,4.86527215e+01,-2.53433019e+01]
,[-8.61140339e-01,3.58779831e+00,3.83989099e+01,-1.90742179e+01]
,[-3.41821743e+00,1.19227324e+01,4.72877108e+01,-2.13954684e+01]
,[-5.84445342e+00,1.78132245e+01,4.22406018e+01,-1.87200283e+01]
,[3.69393225e+00,7.95114533e+00,2.93822934e+01,-1.64277547e+01]
,[-6.54426631e+00,3.49184377e+00,3.19624692e+01,-7.22062791e+00]
,[-1.21711070e+01,1.83732861e+01,1.82976890e+01,-2.64284228e-01]
,[-1.32344218e+01,7.82922781e+00,2.93801348e+01,-7.87335953e+00]
,[-2.14962704e+01,6.23649250e+00,2.39918592e+01,-8.63474274e+00]
,[-1.62486163e+01,9.23951285e+00,2.55538949e+01,-3.55341473e+00]
,[-2.34968665e+01,8.29928867e+00,2.35886534e+01,-1.37280469e+01]
,[-2.90050755e+01,1.11977769e+01,1.09481137e+01,-6.17203631e+00]
,[-2.21160076e+01,1.15023940e+01,2.23194198e+01,-1.27574719e+01]
,[-2.46770830e+01,1.75702086e+01,1.04581491e+01,-4.26880967e+00]
,[-2.40545231e+01,1.55987106e+01,1.60809193e+00,3.30632095e-01]
,[-2.33572509e+01,6.81967010e+00,4.16585629e+00,1.77016166e+00]
,[-2.87794161e+01,8.25126822e+00,-5.47168518e+00,-1.62249003e+01]
,[-2.96953388e+01,1.73728398e+01,-1.64617028e+00,5.38079460e-03]
,[-3.60340678e+01,4.85813470e+00,-5.48733002e+00,-5.04541859e+00]
,[-2.43132824e+01,1.49337449e+01,-4.75238401e+00,9.80401426e+00]
,[-3.11432141e+01,2.10157028e+01,-6.65102633e+00,1.07459750e+01]
,[-3.68013852e+01,2.02818459e+01,-4.82377873e+00,1.92999256e+00]
,[-3.85622526e+01,8.97163862e+00,1.69263285e+00,7.25633823e+00]
,[-3.66993898e+01,1.11367806e+01,-4.71599339e-01,1.27341931e+01]
,[-4.75510440e+01,1.57697099e+01,-1.14379268e-01,1.04242767e+01]
,[-4.09159998e+01,1.97398604e+01,-4.48347286e+00,-4.36464784e+00]
,[-4.37160834e+01,1.95691361e+01,-3.48128253e+00,8.10365043e-02]
,[-4.02082192e+01,1.76975096e+01,-1.18415835e+00,-3.84687246e+00]
,[-3.26460083e+01,1.65191595e+01,6.57590953e+00,5.60415511e+00]
,[-3.98539335e+01,1.74112674e+01,4.87343168e+00,7.20471005e+00]
,[-3.92765689e+01,1.83657620e+01,1.54321798e+00,5.35578255e+00]
,[-3.61620181e+01,2.22235849e+01,-1.43463734e+01,4.16744747e+00]
,[-3.56080397e+01,2.09618472e+01,-7.57012253e+00,2.30401632e+00]
,[-3.76755924e+01,2.74415528e+01,-1.03676488e+01,-2.24621772e+00]
,[-3.67672454e+01,2.85078710e+01,-1.37104604e+01,-7.99899445e+00]
,[-3.19110819e+01,2.68409617e+01,-8.11841253e+00,-4.95846416e-01]
,[-3.34469662e+01,2.57286709e+01,-9.90291671e+00,6.49578438e+00]
,[-3.64601008e+01,2.14070471e+01,-2.26526204e+01,1.04350577e+01]
,[-2.45639746e+01,2.72164985e+01,-1.71518219e+01,1.16320414e+01]
,[-1.23746889e+01,3.19225018e+01,-1.64892526e+01,2.42708284e+01]
,[-2.31166547e+01,3.03500397e+01,-1.43178950e+01,2.74132889e+00]
,[-1.96958405e+01,2.94081445e+01,-2.44790789e+01,2.05679211e+01]
,[-1.96205404e+01,2.59407032e+01,-1.43339510e+01,7.21826967e+00]
,[-1.29936501e+01,2.38668010e+01,-1.29155411e+01,1.31943974e+01]
,[-6.61811861e+00,2.44040610e+01,-6.01334991e+00,2.32072078e+01]
,[-6.56560504e+00,3.52905904e+01,-8.86646440e+00,2.45579445e+01]
,[-8.42419134e+00,3.71772603e+01,-7.08844123e+00,2.38785653e+01]
,[-1.21648266e+01,4.82697378e+01,-7.13478235e-01,2.10406990e+01]
,[-4.03721979e+00,4.48238638e+01,2.15133245e+00,2.75694710e+01]
,[-9.96102884e+00,4.08769260e+01,-1.06526797e+01,2.31995275e+01]
,[-2.90913141e+00,3.33717983e+01,5.84653924e-02,2.58041348e+01]
,[-2.25823815e+00,2.66449292e+01,-3.38917408e+00,2.69019058e+01]
,[2.25316373e+00,2.94857168e+01,1.86508223e+00,1.81260679e+01]
,[-6.00041173e-01,3.20816326e+01,-1.18986225e+01,2.88836168e+01]
,[-5.60859177e+00,2.52698182e+01,-1.33969937e+01,2.00556501e+01]
,[-1.46657216e+01,3.16622122e+01,-9.59239665e+00,1.89209039e+01]
,[-7.48304087e+00,2.77547283e+01,-1.27865007e+01,2.19260333e+01]
,[-7.46827162e+00,2.74613808e+01,-1.10728885e+01,2.66960214e+01]
,[6.02443379e+00,1.78434910e+01,-1.80618859e+01,2.21592417e+01]
,[-1.20516001e+00,2.29888117e+01,-1.06714995e+01,2.36167409e+01]
,[-6.27051513e+00,2.82179012e+01,-3.17068626e+00,1.91401775e+01]
,[-8.50508145e+00,3.18762067e+01,1.46710701e+00,1.83699075e+01]
,[-8.74923012e+00,2.88003986e+01,-4.19342140e+00,1.49302214e+01]
,[-1.22088477e+01,2.18362978e+01,3.17149764e+00,1.60406622e+01]
,[-4.42103202e+00,2.01715204e+01,1.26440730e+00,1.09318895e+01]
,[-1.18281820e+01,2.64306089e+01,4.38850634e+00,1.85805099e+01]
,[-9.12571517e+00,2.21996595e+01,-1.61223629e-01,1.46513019e+01]
,[-1.26670975e+01,1.76786539e+01,-5.47689906e+00,3.10185883e+01]
,[-9.95206299e+00,1.53516946e+01,-1.13315739e+01,2.06923201e+01]
,[-1.48900095e+01,2.17491871e+01,-1.50285103e+01,1.57257705e+01]
,[-5.05143996e+00,1.30786055e+01,-8.27762982e+00,1.88332965e+01]
,[-9.03612409e+00,1.31522646e+01,-8.32282502e+00,1.81262436e+01]
,[-1.29452257e+01,2.12129544e+01,-7.34321387e+00,1.72907164e+01]
,[-9.38176512e+00,6.70310319e+00,-8.79948683e+00,2.53898913e+01]
,[-8.99694331e+00,1.97827386e-02,-7.10845775e+00,3.33508105e+01]
,[-1.24704698e+01,1.08135288e+01,-3.73305856e+00,3.61159113e+01]
,[-2.27771765e+00,1.26418516e+01,-3.50095025e+00,3.51909064e+01]
,[-5.65337354e+00,1.71074840e+01,-2.26857730e+01,3.67900463e+01]
,[-1.69135453e+01,1.84087606e+01,-1.93763032e+01,5.23301017e+01]
,[-2.62757849e+01,8.58405709e+00,-8.34337145e+00,4.37263797e+01]
,[-2.02613282e+01,1.03512229e+01,-1.68850212e+01,4.07075409e+01]
,[-1.90636714e+01,9.89618890e+00,-1.67930238e+01,4.22331728e+01]
,[-1.47402272e+01,1.84526622e+01,-2.32325348e+01,4.45021782e+01]
,[-1.92969612e+01,2.39513194e+01,-1.91805645e+01,4.35985220e+01]
,[-2.21318670e+01,2.42610005e+01,-2.10211780e+01,4.11670584e+01]
,[-3.00843827e+01,2.67741773e+01,-2.52288411e+01,4.10727190e+01]
,[-2.72821895e+01,2.63219439e+01,-1.29343941e+01,3.86836285e+01]
,[-2.59146450e+01,3.20993703e+01,-6.08865084e+00,2.73616988e+01]
,[-2.34826609e+01,3.35654603e+01,-2.16369176e+01,2.78324740e+01]
,[-2.25132309e+01,3.50680632e+01,-1.30279787e+01,2.56682301e+01]
,[-3.75087188e+01,3.89700830e+01,-2.77382869e+01,2.14166913e+01]]

b112 = [[-2.28747145e+01,-5.72011677e+01,1.90799018e+01,6.06919232e+01]
,[-2.33911476e+01,-6.13576674e+01,2.12415161e+01,5.86714201e+01]
,[-2.36335806e+01,-5.57797841e+01,2.11169860e+01,6.64718084e+01]
,[-2.76120135e+01,-6.11607347e+01,1.17333973e+01,6.50691034e+01]
,[-2.63387669e+01,-5.58569896e+01,6.20879996e+00,7.71646712e+01]
,[-1.81378002e+01,-5.99469871e+01,1.26952835e+01,6.70166627e+01]
,[-3.59306928e+01,-7.12155790e+01,1.02263196e+01,6.17896285e+01]
,[-1.13894430e+01,-5.86555760e+01,1.55305968e+01,7.00327126e+01]
,[-2.32316101e+01,-6.20922971e+01,1.80736851e+01,8.28901742e+01]
,[-1.33299749e+01,-5.73764329e+01,1.10611944e+01,7.34946101e+01]
,[-7.86966148e+00,-5.95318206e+01,2.11648050e+01,6.50002483e+01]
,[-1.53706843e+01,-5.49544635e+01,1.10535943e+01,7.02079117e+01]
,[-2.10990142e+01,-5.08493439e+01,1.07528654e+01,7.06763088e+01]
,[-2.46256880e+01,-5.30562617e+01,9.54256452e+00,5.88334131e+01]
,[-1.62911577e+01,-4.57819305e+01,-3.89756570e+00,5.82467296e+01]
,[-1.39989115e+01,-4.29741670e+01,-1.41068734e+01,5.93141074e+01]
,[-8.77626378e+00,-3.40327967e+01,-1.35539566e+01,5.27435488e+01]
,[-8.89293624e+00,-2.46251775e+01,-2.06513685e+01,6.19110946e+01]
,[-2.15096909e+01,-3.16557552e+01,-1.91610612e+01,5.61313823e+01]
,[-2.94119083e+01,-3.03554063e+01,-2.90695561e+01,5.66508669e+01]
,[-3.85657656e+01,-3.14061405e+01,-3.25357170e+01,5.56534736e+01]
,[-1.97593375e+01,-2.42338266e+01,-2.82597287e+01,5.68995321e+01]
,[-3.93404732e+01,-2.29737035e+01,-3.78294735e+01,4.32168933e+01]
,[-3.59595450e+01,-2.43170869e+01,-3.09997909e+01,5.33369366e+01]
,[-3.18932387e+01,-2.01260012e+01,-2.97967233e+01,4.90276827e+01]
,[-3.62802260e+01,-2.59856516e+01,-2.38357173e+01,4.47197530e+01]
,[-3.91553274e+01,-2.04719928e+01,-3.04736647e+01,4.19316368e+01]
,[-3.40660113e+01,-2.95481952e+01,-2.77807784e+01,4.33560195e+01]
,[-2.90595424e+01,-1.76074795e+01,-2.40559616e+01,5.05394408e+01]
,[-1.88747968e+01,-2.39671163e+01,-3.12266110e+01,3.94617633e+01]
,[-2.81520517e+01,-1.59072791e+01,-3.17711845e+01,4.60460193e+01]
,[-1.61175272e+01,-3.06406112e+01,-3.91204309e+01,2.84664360e+01]
,[-1.41827654e+01,-2.82480513e+01,-2.97328323e+01,3.38854462e+01]
,[-1.05501880e+01,-3.56630066e+01,-2.99426568e+01,2.95527733e+01]
,[-6.75071458e+00,-3.49564675e+01,-3.99219783e+01,2.88033083e+01]
,[-1.03294281e+01,-3.41293670e+01,-3.80790800e+01,3.65440494e+01]
,[-2.38459721e+00,-4.22642683e+01,-3.61558169e+01,3.12507256e+01]
,[-2.23010352e+00,-3.50692597e+01,-4.23207095e+01,2.43617143e+01]
,[-4.48673919e+00,-3.99223324e+01,-4.56083664e+01,2.35311548e+01]
,[1.37937465e+00,-3.02495904e+01,-3.68041546e+01,2.38099623e+01]
,[-7.49659851e-01,-3.14260841e+01,-3.03665445e+01,2.71156742e+01]
,[9.23273101e-01,-2.70696749e+01,-3.19174623e+01,1.18704747e+01]
,[-2.23699553e+00,-2.99678877e+01,-3.93261394e+01,2.17942360e+01]
,[-5.05898784e+00,-3.18555099e+01,-2.58743868e+01,1.75923221e+01]
,[-5.18287582e-01,-3.47269918e+01,-2.67020887e+01,1.43942654e+01]
,[2.94879232e+00,-2.22233606e+01,-2.62956732e+01,2.44564591e+01]
,[9.00063715e+00,-2.51471354e+01,-2.57525356e+01,2.33867453e+01]
,[3.09543686e+00,-2.18014455e+01,-2.27630804e+01,2.29934439e+01]
,[-1.22207954e+01,-1.57634409e+01,-1.98327961e+01,1.96338610e+01]
,[-6.64318719e+00,-1.00010152e+01,-1.82583653e+01,3.36169837e+01]
,[-8.65001277e+00,-2.25226217e+01,-1.43202742e+01,3.57453673e+01]
,[-8.69083106e+00,-7.98767086e+00,-2.54845942e+01,1.71230839e+01]
,[-2.63802212e+00,-1.23664256e+00,-1.56294468e+01,2.76917301e+01]
,[-2.21331836e+00,6.34623767e+00,-1.75445859e+01,3.86120081e+01]
,[-9.28512063e-01,-4.82175985e+00,-2.11344126e+01,4.18091721e+01]
,[-4.66232146e+00,5.04591428e+00,-1.67765549e+01,3.64994477e+01]
,[-6.62967800e+00,-4.63745116e-01,-2.18927807e+01,3.66505378e+01]
,[-4.37941935e+00,1.66519118e+00,-2.28337423e+01,3.25735175e+01]
,[-6.19959928e+00,7.53762157e+00,-1.41653982e+01,3.20767992e+01]
,[-4.93155744e+00,1.24695167e+01,-1.03374047e+01,3.68092980e+01]
,[-1.09480102e+01,8.42211761e+00,-2.59998155e+01,4.48702634e+01]
,[-9.20545613e+00,5.65753347e+00,-2.10342748e+01,4.31825560e+01]
,[-1.82804112e+01,5.08608135e+00,-2.37698627e+01,3.73651897e+01]
,[-2.26320016e+01,1.22438446e+01,-2.72799229e+01,3.11400919e+01]
,[-2.18832024e+01,1.23503240e+01,-3.97358491e+01,3.28992954e+01]
,[-9.49181997e+00,9.10085147e+00,-1.98835193e+01,2.95305533e+01]
,[-1.14826975e+01,6.96917505e+00,-2.16829818e+01,3.50158968e+01]
,[-9.56230726e+00,2.51483232e+00,-2.17628487e+01,2.87639187e+01]
,[-7.34920592e+00,7.91745353e+00,-3.59226157e+00,2.84231749e+01]
,[3.48450421e+00,8.08184410e+00,-1.14232381e+01,2.52569430e+01]
,[-5.03899873e+00,1.10515883e+01,-1.23694833e+01,2.82950387e+01]
,[-7.54861767e+00,9.97093847e+00,-1.22717844e+01,2.59478188e+01]
,[-1.43815255e+01,1.30739048e+01,-1.35201662e+01,2.56541029e+01]
,[-1.13384381e+01,1.25411078e+01,-1.45400755e+01,2.53787696e+01]
,[-5.57853488e+00,1.67995586e+01,-1.45278795e+01,1.97661834e+01]
,[-6.35916395e+00,1.49857887e+01,-1.73021122e+01,1.91770768e+01]
,[-4.49870932e+00,6.68689789e+00,-1.79582099e+01,2.77850909e+01]
,[1.74465988e+00,1.80621901e+01,-1.83876536e+01,2.23190490e+01]
,[-9.77507625e-01,1.07723127e+01,-1.90500860e+01,2.46686377e+01]
,[1.24686424e+01,9.37108344e+00,-1.08481193e+01,1.84970077e+01]
,[-6.11709415e+00,4.69703967e+00,-6.21051255e-01,1.75661300e+01]
,[-5.78710995e+00,1.40995633e+01,-9.17556366e+00,1.64395178e+01]
,[6.96378473e-01,1.68162021e+01,-6.59147975e+00,1.65424753e+01]
,[4.39312128e+00,9.90979032e+00,9.88926516e+00,1.55924319e+01]
,[8.84423357e+00,1.17855211e+01,-1.66945173e+00,7.87028867e+00]
,[9.05287562e+00,1.99733143e-01,-1.02532531e+00,1.34963179e+01]
,[1.04547715e+00,4.40625211e+00,-1.94831453e+00,9.97213268e+00]
,[2.13036852e+00,-5.51016174e+00,-3.63209818e+00,1.48821451e+01]
,[-1.00316799e+01,5.94166081e+00,-4.93660902e+00,1.01161865e+01]
,[-1.22879471e+00,-1.17625039e+00,5.27488334e+00,1.16904196e+01]
,[4.89010364e+00,6.78369831e-01,4.49086622e+00,9.60226256e+00]
,[2.21880269e+00,-2.32413498e+00,8.79260965e+00,1.23145270e+01]
,[7.12899693e-02,8.05010078e+00,-2.11298584e+00,1.07569193e+01]
,[3.42075333e+00,2.75607296e+00,9.55615893e+00,1.14205729e+01]
,[9.77638513e+00,-7.65787922e+00,8.21141456e+00,8.18914560e+00]
,[6.86060920e+00,-3.99141584e+00,1.44198166e+00,9.44194874e+00]
,[4.34185805e+00,-4.69699875e+00,2.16107045e+00,9.07277851e+00]
,[2.83963720e+00,-9.98653384e+00,6.71803708e+00,3.22936777e+00]
,[-5.43671360e-01,-1.75099389e+00,-7.80089685e-02,2.04639471e+01]
,[7.99009889e-01,-5.36244601e-01,-5.75918358e+00,1.94865446e+01]
,[1.24792277e+01,-4.01556303e+00,-4.55353431e+00,1.32533262e+01]
,[1.57063186e+01,6.55337882e-01,-1.48201450e+01,8.22762432e+00]
,[5.28056993e+00,-2.50508447e+00,-2.38782224e+01,3.35617880e+00]
,[2.64970274e+00,-4.43699208e+00,-1.63777163e+01,3.42492228e+00]
,[3.37102370e+00,-4.65187791e+00,-2.39630220e+01,9.74610779e+00]
,[6.60551969e+00,-6.30588666e+00,-2.07349011e+01,-2.90286980e+00]
,[9.73400782e+00,-2.22886776e+01,-1.07562367e+01,-1.17842392e+00]
,[1.31811175e+01,-1.48388755e+01,-1.54805820e+01,1.61459496e+00]
,[2.12536998e+01,-1.00898153e+01,-3.06863453e+00,-4.15254689e+00]
,[2.69766457e+01,-2.37063810e+00,-3.03078167e+01,-1.18755901e+01]
,[2.12903484e+01,-9.22988837e+00,-2.31645154e+01,-8.66234950e+00]
,[3.29225515e+01,-1.31149866e+00,-1.40566017e+01,-1.91073601e+01]
,[2.76211872e+01,-8.33464307e+00,-2.85837452e+01,-2.36050395e+01]
,[2.55669329e+01,-1.59682373e+01,-2.54577995e+01,-2.11363968e+01]
,[3.20098872e+01,-1.75712029e+01,-2.65457650e+01,-2.39643229e+01]
,[3.01475693e+01,3.41849368e+00,-2.03808752e+01,-1.22258501e+01]
,[3.76222667e+01,2.62694423e+00,-1.87026331e+01,-1.27961234e+01]
,[4.22039239e+01,-1.51906327e+00,-3.10321416e+01,-8.54704891e+00]
,[5.11298850e+01,-9.64856766e+00,-2.59297267e+01,-3.75403504e+00]
,[4.86100343e+01,7.63064182e+00,-3.45316561e+01,-6.65538601e+00]
,[5.17684260e+01,7.82225951e-01,-1.88233766e+01,-1.85029740e+01]
,[4.46447667e+01,4.12558993e+00,-2.59519642e+01,-1.06573990e+01]
,[5.22663905e+01,9.01157872e+00,-3.09112947e+01,-1.21551828e+01]
,[4.66034585e+01,9.94459206e-01,-2.14651900e+01,-1.06495758e+01]
,[4.65406989e+01,-4.91983091e-03,-1.20106826e+01,-1.05445022e+01]
,[4.53588911e+01,-5.02580936e+00,-1.24369228e+01,-1.05162496e+01]
,[3.76452188e+01,-4.87571532e+00,-1.16604967e+01,-7.80296706e+00]
,[4.09200264e+01,-4.93247199e+00,-8.40312025e+00,-6.19537224e+00]
,[3.05026505e+01,-2.76362262e+00,-8.46177560e+00,4.84630715e+00]
,[4.23806802e+01,4.59839560e+00,-5.50712234e+00,-7.11027261e+00]
,[3.17904546e+01,-1.17016226e+01,-8.24776741e+00,-8.66687375e+00]
,[1.55505874e+01,-1.96293909e+00,-1.50295574e+01,-1.00464820e+01]
,[3.29686041e+01,-1.21394698e+01,-1.38401574e+01,-2.16348835e+01]
,[2.69074149e+01,-1.04828969e+00,-1.48021140e+01,-1.18207850e+01]
,[2.57732459e+01,-8.83283895e-01,-1.89163726e+01,-1.19932810e+01]
,[2.33448356e+01,-1.88968527e+00,-2.04180303e+01,-1.22156531e+01]
,[3.21389262e+01,-7.40799742e-01,-1.79914490e+01,-3.95735787e+00]
,[1.94945106e+01,-3.68112984e+00,-1.23583382e+01,9.46715475e-01]
,[2.54333174e+01,-5.98398522e+00,-2.32140082e+01,-1.42633928e+01]
,[2.23301194e+01,-7.78597618e+00,-1.78898615e+01,-3.93983707e+00]
,[1.81284243e+01,3.07538456e+00,-1.94794399e+01,-1.13478900e+01]
,[2.04319440e+01,-2.59196948e+00,-1.89874008e+01,1.47188425e+00]
,[1.39960074e+01,3.47477742e+00,-1.44675327e+01,3.75463264e+00]
,[2.18030421e+01,5.29278978e+00,-1.55417418e+01,9.29049389e+00]
,[1.50936757e+01,7.02064721e+00,-1.63887923e+01,5.51297146e+00]
,[1.15888891e+01,8.99452464e+00,-7.08632127e+00,-4.19687988e+00]
,[3.13176775e+01,-1.14066448e+00,-6.32150308e+00,-1.28010697e+01]
,[2.52641174e+01,3.57270750e+00,-2.57981301e+00,-1.24641098e+01]
,[2.82720085e+01,-5.75780795e-01,-1.49553856e+00,3.62515378e-01]
,[1.63061274e+01,-6.09380480e+00,-1.11725738e+01,-2.42570448e+00]
,[2.48870637e+01,3.84702580e-01,-1.14964579e+01,-8.17058047e+00]
,[1.96193994e+01,-6.32452278e+00,-1.30902141e+01,-9.86717892e+00]
,[6.54952756e+00,-1.45370155e+01,7.65313708e-01,-1.78465267e+01]
,[1.11587371e+01,-1.81656917e+01,-6.85681206e+00,-1.41096210e+01]
,[2.19817932e+00,-1.01355469e+01,-1.32364271e+01,-1.97868163e+01]
,[1.15306511e+01,1.40700375e+00,-7.05455371e+00,-2.04981048e+01]
,[1.66034584e+01,-1.03331885e+01,-1.63071792e+01,-1.55704019e+01]
,[2.25288080e+01,-7.82718708e+00,-1.82421111e+01,-1.10558728e+01]
,[2.14291940e+01,5.80306257e+00,-1.65177955e+01,-1.68119447e+01]
,[1.84987334e+01,1.63530611e+01,-2.19551448e+01,-1.81646774e+01]
,[1.14838644e+01,7.78298146e+00,-2.34981717e+01,-1.17012972e+01]
,[9.22212918e+00,7.78889719e+00,-2.09325526e+01,-9.90287102e+00]
,[7.66174842e+00,7.36765960e+00,-3.38837181e+01,-1.78851569e+01]
,[9.84095493e+00,2.81390892e+00,-2.29269112e+01,-8.05381571e+00]
,[8.16929875e+00,6.40882456e+00,-2.20043992e+01,-1.20850746e+01]
,[1.70964110e+00,1.00437465e+01,-1.77239515e+01,-1.01893042e+01]
,[3.00536932e+00,1.81499087e+01,-2.00693181e+01,-4.06743190e+00]
,[8.58549051e+00,1.14891633e+01,-2.45226094e+01,-9.50535819e+00]
,[1.95998762e+01,1.90285835e+01,-2.23307264e+01,1.04667204e+00]
,[1.93271993e+01,1.04618021e+01,-2.66996772e+01,-5.08298806e-01]
,[1.80672088e+01,7.86116323e+00,-2.06388940e+01,-9.88833264e-02]
,[1.23245274e+01,1.24471534e+01,-1.95765421e+01,-4.30528371e+00]
,[1.60229805e+01,1.89806674e+01,-2.81237652e+01,-1.29575007e+01]
,[7.98479762e+00,1.35535839e+01,-2.21389548e+01,-2.01111795e+00]
,[1.57256337e+01,1.05825792e+01,-1.63164249e+01,-7.86968960e+00]
,[1.90988029e+01,1.21948366e+01,-2.89580519e+01,-8.08732988e+00]
,[2.43195579e+01,7.30876955e+00,-2.67771325e+01,-1.45573178e+01]
,[1.97837518e+01,9.04273263e+00,-3.04653821e+01,-1.61718635e+01]
,[1.61067437e+01,5.45214190e+00,-2.08387789e+01,2.54656255e+00]
,[1.88712936e+01,7.91252291e+00,-3.18381824e+01,4.65192905e+00]
,[2.15940887e+01,1.52375863e+01,-2.78062067e+01,1.71911852e+00]
,[3.41945846e+01,2.51801043e+01,-2.95394418e+01,1.11348214e+01]
,[3.40368242e+01,3.01376241e+01,-3.97434893e+01,1.66039429e+01]
,[2.09274825e+01,3.64086867e+01,-4.37944751e+01,1.15586126e+01]
,[2.13907447e+01,2.97828612e+01,-3.51105458e+01,1.53171956e+01]
,[1.80348528e+01,4.01808235e+01,-4.64258850e+01,2.85858812e+01]
,[1.87250385e+01,4.55102297e+01,-3.47301162e+01,1.86071731e+01]
,[1.60957588e+01,4.04290134e+01,-4.38028044e+01,1.92015383e+01]
,[1.35559544e+01,3.31514861e+01,-3.29646179e+01,2.21277568e+01]
,[2.05073392e+01,3.21880482e+01,-4.62884397e+01,2.13378679e+01]
,[1.26937787e+01,3.79125652e+01,-4.31063887e+01,1.63871068e+01]
,[1.45024980e+01,2.06946423e+01,-4.09105242e+01,2.21723847e+01]
,[2.13028708e+01,1.50325087e+01,-3.93284127e+01,2.26379108e+01]
,[2.82621616e+01,1.57418385e+01,-2.62082496e+01,1.19768712e+01]
,[1.72673387e+01,1.85411456e+01,-2.92356849e+01,1.64722679e+01]
,[1.73127894e+01,6.62753310e+00,-3.03694675e+01,2.03684326e+01]
,[2.45957755e+01,1.82117944e+01,-2.09516129e+01,1.73101701e+01]
,[1.12830005e+01,5.50605778e+00,-9.65245903e+00,2.05639347e+01]
,[1.08793637e+01,3.09553189e+00,-1.33351094e+01,1.04205827e+01]
,[4.67430315e-01,6.57347623e+00,-1.10186218e+01,8.65859109e+00]]

kap001 = [0.5, 0.5, -0.5, -0.5]
kap002 = [-0.5, 0.5, -0.5, 0.5]
kap101 = [-0.5, 0.5, 0.5, -0.5]
kap102 = [-0.5, 0.5, 0.5, -0.5]
kap011 = [0.5, 0.5, -0.5, -0.5]
kap012 = [-0.5, 0.5, -0.5, 0.5]
kap111 = [-0.5, 0.5, -0.5, 0.5]
kap112 = [0.5, 0.5, -0.5, -0.5]

cum_rew = 0
trial_no = 0

stable = np.random.randint(2)
trend = np.random.randint(2)
num = np.random.randint(2)

if stable == 0 and trend == 0 and num == 0:
    rews = b001
    kappas = kap001
elif stable == 0 and trend == 0 and num == 1:
    rews = b002
    kappas = kap002
elif trend == 1 and stable == 0 and num == 0:
    rews = b101
    kappas = kap101
elif trend == 1 and stable == 0 and num == 1:
    rews = b102
    kappas = kap102
elif trend == 0 and stable == 1 and num == 0:
    rews = b011
    kappas = kap011
elif trend == 0 and stable == 1 and num == 1:
    rews = b012
    kappas = kap012
elif trend == 1 and stable == 1 and num == 0:
    rews = b111
    kappas = kap111
elif trend == 1 and stable == 1 and num == 1:
    rews = b112
    kappas = kap112
    
leng = len(rews)
for x in range(leng):
    rews[x] = np.round(rews[x])

bandList = ['b1.png','b2.png','b3.png','b4.png']
np.random.shuffle(bandList)
thisExp.addData('stable', stable)
thisExp.addData('trend', trend)
thisExp.addData('num', num)
thisExp.addData('kappas', kappas)

# Initialize components for Routine "instruct"
instructClock = core.Clock()
text_2 = visual.TextStim(win=win, name='text_2',
    text='Imagine you are in a casino, and you go to a room with four slot machines. On clicking a machine, it yeilds a reward. At any point, some machines may be better than the others, but the amount they give varies.\nYour aim is to maximize your cumulative reward by the end of this task.\n\nPress any button to go to the task!',
    font='Arial',
    pos=(0, 0), height=0.05, wrapWidth=None, ori=0, 
    color='black', colorSpace='rgb', opacity=1, 
    languageStyle='LTR',
    depth=0.0);
key_resp_2 = keyboard.Keyboard()

# Initialize components for Routine "blank_screen"
blank_screenClock = core.Clock()
text_3 = visual.TextStim(win=win, name='text_3',
    text=None,
    font='Arial',
    pos=(0, 0), height=0.1, wrapWidth=None, ori=0, 
    color='black', colorSpace='rgb', opacity=1, 
    languageStyle='LTR',
    depth=0.0);

# Initialize components for Routine "fixate"
fixateClock = core.Clock()
text_4 = visual.TextStim(win=win, name='text_4',
    text='+',
    font='Arial',
    pos=(0, 0), height=0.1, wrapWidth=None, ori=0, 
    color='black', colorSpace='rgb', opacity=1, 
    languageStyle='LTR',
    depth=0.0);

# Initialize components for Routine "bandits"
banditsClock = core.Clock()
image_51 = visual.ImageStim(
    win=win,
    name='image_51', 
    image=bandList[0], mask=None,
    ori=0, pos=(-0.25, 0.25), size=(0.3, 0.3),
    color=[1,1,1], colorSpace='rgb', opacity=1,
    flipHoriz=False, flipVert=False,
    texRes=128, interpolate=True, depth=0.0)
image_52 = visual.ImageStim(
    win=win,
    name='image_52', 
    image=bandList[1], mask=None,
    ori=0, pos=(0.25, 0.25), size=(0.3, 0.3),
    color=[1,1,1], colorSpace='rgb', opacity=1,
    flipHoriz=False, flipVert=False,
    texRes=128, interpolate=True, depth=-1.0)
image_53 = visual.ImageStim(
    win=win,
    name='image_53', 
    image=bandList[2], mask=None,
    ori=0, pos=(0.25, -0.25), size=(0.3, 0.3),
    color=[1,1,1], colorSpace='rgb', opacity=1,
    flipHoriz=False, flipVert=False,
    texRes=128, interpolate=True, depth=-2.0)
image_54 = visual.ImageStim(
    win=win,
    name='image_54', 
    image=bandList[3], mask=None,
    ori=0, pos=(-0.25, -0.25), size=(0.3, 0.3),
    color=[1,1,1], colorSpace='rgb', opacity=1,
    flipHoriz=False, flipVert=False,
    texRes=128, interpolate=True, depth=-3.0)
mouse_5 = event.Mouse(win=win)
x, y = [None, None]
mouse_5.mouseClock = core.Clock()
text_5 = visual.TextStim(win=win, name='text_5',
    text='default text',
    font='Arial',
    pos=(0.8, 0.4), height=0.06, wrapWidth=None, ori=0, 
    color='black', colorSpace='rgb', opacity=1, 
    languageStyle='LTR',
    depth=-5.0);

# Initialize components for Routine "feedback"
feedbackClock = core.Clock()
image_61 = visual.ImageStim(
    win=win,
    name='image_61', 
    image=bandList[0], mask=None,
    ori=0, pos=(-0.25, 0.25), size=(0.3, 0.3),
    color=[1,1,1], colorSpace='rgb', opacity=1,
    flipHoriz=False, flipVert=False,
    texRes=128, interpolate=True, depth=-1.0)
image_62 = visual.ImageStim(
    win=win,
    name='image_62', 
    image=bandList[1], mask=None,
    ori=0, pos=(0.25, 0.25), size=(0.3, 0.3),
    color=[1,1,1], colorSpace='rgb', opacity=1,
    flipHoriz=False, flipVert=False,
    texRes=128, interpolate=True, depth=-2.0)
image_63 = visual.ImageStim(
    win=win,
    name='image_63', 
    image=bandList[2], mask=None,
    ori=0, pos=(0.25, -0.25), size=(0.3, 0.3),
    color=[1,1,1], colorSpace='rgb', opacity=1,
    flipHoriz=False, flipVert=False,
    texRes=128, interpolate=True, depth=-3.0)
image_64 = visual.ImageStim(
    win=win,
    name='image_64', 
    image=bandList[3], mask=None,
    ori=0, pos=(-0.25, -0.25), size=(0.3, 0.3),
    color=[1,1,1], colorSpace='rgb', opacity=1,
    flipHoriz=False, flipVert=False,
    texRes=128, interpolate=True, depth=-4.0)
text_61 = visual.TextStim(win=win, name='text_61',
    text='default text',
    font='Arial',
    pos=(-0.29, 0.275), height=0.06, wrapWidth=None, ori=0, 
    color='black', colorSpace='rgb', opacity=1, 
    languageStyle='LTR',
    depth=-5.0);
text_62 = visual.TextStim(win=win, name='text_62',
    text='default text',
    font='Arial',
    pos=(0.21, 0.275), height=0.06, wrapWidth=None, ori=0, 
    color='black', colorSpace='rgb', opacity=1, 
    languageStyle='LTR',
    depth=-6.0);
text_63 = visual.TextStim(win=win, name='text_63',
    text='default text',
    font='Arial',
    pos=(0.21, -0.225), height=0.06, wrapWidth=None, ori=0, 
    color='black', colorSpace='rgb', opacity=1, 
    languageStyle='LTR',
    depth=-7.0);
text_64 = visual.TextStim(win=win, name='text_64',
    text='default text',
    font='Arial',
    pos=(-0.29, -0.225), height=0.06, wrapWidth=None, ori=0, 
    color='black', colorSpace='rgb', opacity=1, 
    languageStyle='LTR',
    depth=-8.0);
text_6 = visual.TextStim(win=win, name='text_6',
    text='default text',
    font='Arial',
    pos=(0.8, 0.4), height=0.06, wrapWidth=None, ori=0, 
    color='black', colorSpace='rgb', opacity=1, 
    languageStyle='LTR',
    depth=-9.0);

# Initialize components for Routine "thanks"
thanksClock = core.Clock()
text_7 = visual.TextStim(win=win, name='text_7',
    text='Thank you for participating in the study.',
    font='Arial',
    pos=(0, 0), height=0.1, wrapWidth=None, ori=0, 
    color='black', colorSpace='rgb', opacity=1, 
    languageStyle='LTR',
    depth=0.0);

# Create some handy timers
globalClock = core.Clock()  # to track the time since experiment started
routineTimer = core.CountdownTimer()  # to track time remaining of each (non-slip) routine 

# ------Prepare to start Routine "welcome"-------
continueRoutine = True
# update component parameters for each repeat
key_resp_1.keys = []
key_resp_1.rt = []
_key_resp_1_allKeys = []
# keep track of which components have finished
welcomeComponents = [text_1, key_resp_1]
for thisComponent in welcomeComponents:
    thisComponent.tStart = None
    thisComponent.tStop = None
    thisComponent.tStartRefresh = None
    thisComponent.tStopRefresh = None
    if hasattr(thisComponent, 'status'):
        thisComponent.status = NOT_STARTED
# reset timers
t = 0
_timeToFirstFrame = win.getFutureFlipTime(clock="now")
welcomeClock.reset(-_timeToFirstFrame)  # t0 is time of first possible flip
frameN = -1

# -------Run Routine "welcome"-------
while continueRoutine:
    # get current time
    t = welcomeClock.getTime()
    tThisFlip = win.getFutureFlipTime(clock=welcomeClock)
    tThisFlipGlobal = win.getFutureFlipTime(clock=None)
    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)
    # update/draw components on each frame
    
    # *text_1* updates
    if text_1.status == NOT_STARTED and tThisFlip >= 0.0-frameTolerance:
        # keep track of start time/frame for later
        text_1.frameNStart = frameN  # exact frame index
        text_1.tStart = t  # local t and not account for scr refresh
        text_1.tStartRefresh = tThisFlipGlobal  # on global time
        win.timeOnFlip(text_1, 'tStartRefresh')  # time at next scr refresh
        text_1.setAutoDraw(True)
    
    # *key_resp_1* updates
    waitOnFlip = False
    if key_resp_1.status == NOT_STARTED and tThisFlip >= 0.0-frameTolerance:
        # keep track of start time/frame for later
        key_resp_1.frameNStart = frameN  # exact frame index
        key_resp_1.tStart = t  # local t and not account for scr refresh
        key_resp_1.tStartRefresh = tThisFlipGlobal  # on global time
        win.timeOnFlip(key_resp_1, 'tStartRefresh')  # time at next scr refresh
        key_resp_1.status = STARTED
        # keyboard checking is just starting
        waitOnFlip = True
        win.callOnFlip(key_resp_1.clock.reset)  # t=0 on next screen flip
        win.callOnFlip(key_resp_1.clearEvents, eventType='keyboard')  # clear events on next screen flip
    if key_resp_1.status == STARTED and not waitOnFlip:
        theseKeys = key_resp_1.getKeys(keyList=None, waitRelease=False)
        _key_resp_1_allKeys.extend(theseKeys)
        if len(_key_resp_1_allKeys):
            key_resp_1.keys = _key_resp_1_allKeys[-1].name  # just the last key pressed
            key_resp_1.rt = _key_resp_1_allKeys[-1].rt
            # a response ends the routine
            continueRoutine = False
    
    # check for quit (typically the Esc key)
    if endExpNow or defaultKeyboard.getKeys(keyList=["escape"]):
        core.quit()
    
    # check if all components have finished
    if not continueRoutine:  # a component has requested a forced-end of Routine
        break
    continueRoutine = False  # will revert to True if at least one component still running
    for thisComponent in welcomeComponents:
        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:
            continueRoutine = True
            break  # at least one component has not yet finished
    
    # refresh the screen
    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen
        win.flip()

# -------Ending Routine "welcome"-------
for thisComponent in welcomeComponents:
    if hasattr(thisComponent, "setAutoDraw"):
        thisComponent.setAutoDraw(False)
thisExp.addData('text_1.started', text_1.tStartRefresh)
thisExp.addData('text_1.stopped', text_1.tStopRefresh)
# check responses
if key_resp_1.keys in ['', [], None]:  # No response was made
    key_resp_1.keys = None
thisExp.addData('key_resp_1.keys',key_resp_1.keys)
if key_resp_1.keys != None:  # we had a response
    thisExp.addData('key_resp_1.rt', key_resp_1.rt)
thisExp.addData('key_resp_1.started', key_resp_1.tStartRefresh)
thisExp.addData('key_resp_1.stopped', key_resp_1.tStopRefresh)
thisExp.nextEntry()
# the Routine "welcome" was not non-slip safe, so reset the non-slip timer
routineTimer.reset()

# ------Prepare to start Routine "instruct"-------
continueRoutine = True
# update component parameters for each repeat
key_resp_2.keys = []
key_resp_2.rt = []
_key_resp_2_allKeys = []
# keep track of which components have finished
instructComponents = [text_2, key_resp_2]
for thisComponent in instructComponents:
    thisComponent.tStart = None
    thisComponent.tStop = None
    thisComponent.tStartRefresh = None
    thisComponent.tStopRefresh = None
    if hasattr(thisComponent, 'status'):
        thisComponent.status = NOT_STARTED
# reset timers
t = 0
_timeToFirstFrame = win.getFutureFlipTime(clock="now")
instructClock.reset(-_timeToFirstFrame)  # t0 is time of first possible flip
frameN = -1

# -------Run Routine "instruct"-------
while continueRoutine:
    # get current time
    t = instructClock.getTime()
    tThisFlip = win.getFutureFlipTime(clock=instructClock)
    tThisFlipGlobal = win.getFutureFlipTime(clock=None)
    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)
    # update/draw components on each frame
    
    # *text_2* updates
    if text_2.status == NOT_STARTED and tThisFlip >= 0.0-frameTolerance:
        # keep track of start time/frame for later
        text_2.frameNStart = frameN  # exact frame index
        text_2.tStart = t  # local t and not account for scr refresh
        text_2.tStartRefresh = tThisFlipGlobal  # on global time
        win.timeOnFlip(text_2, 'tStartRefresh')  # time at next scr refresh
        text_2.setAutoDraw(True)
    
    # *key_resp_2* updates
    waitOnFlip = False
    if key_resp_2.status == NOT_STARTED and tThisFlip >= 0.0-frameTolerance:
        # keep track of start time/frame for later
        key_resp_2.frameNStart = frameN  # exact frame index
        key_resp_2.tStart = t  # local t and not account for scr refresh
        key_resp_2.tStartRefresh = tThisFlipGlobal  # on global time
        win.timeOnFlip(key_resp_2, 'tStartRefresh')  # time at next scr refresh
        key_resp_2.status = STARTED
        # keyboard checking is just starting
        waitOnFlip = True
        win.callOnFlip(key_resp_2.clock.reset)  # t=0 on next screen flip
        win.callOnFlip(key_resp_2.clearEvents, eventType='keyboard')  # clear events on next screen flip
    if key_resp_2.status == STARTED and not waitOnFlip:
        theseKeys = key_resp_2.getKeys(keyList=None, waitRelease=False)
        _key_resp_2_allKeys.extend(theseKeys)
        if len(_key_resp_2_allKeys):
            key_resp_2.keys = _key_resp_2_allKeys[-1].name  # just the last key pressed
            key_resp_2.rt = _key_resp_2_allKeys[-1].rt
            # a response ends the routine
            continueRoutine = False
    
    # check for quit (typically the Esc key)
    if endExpNow or defaultKeyboard.getKeys(keyList=["escape"]):
        core.quit()
    
    # check if all components have finished
    if not continueRoutine:  # a component has requested a forced-end of Routine
        break
    continueRoutine = False  # will revert to True if at least one component still running
    for thisComponent in instructComponents:
        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:
            continueRoutine = True
            break  # at least one component has not yet finished
    
    # refresh the screen
    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen
        win.flip()

# -------Ending Routine "instruct"-------
for thisComponent in instructComponents:
    if hasattr(thisComponent, "setAutoDraw"):
        thisComponent.setAutoDraw(False)
thisExp.addData('text_2.started', text_2.tStartRefresh)
thisExp.addData('text_2.stopped', text_2.tStopRefresh)
# check responses
if key_resp_2.keys in ['', [], None]:  # No response was made
    key_resp_2.keys = None
thisExp.addData('key_resp_2.keys',key_resp_2.keys)
if key_resp_2.keys != None:  # we had a response
    thisExp.addData('key_resp_2.rt', key_resp_2.rt)
thisExp.addData('key_resp_2.started', key_resp_2.tStartRefresh)
thisExp.addData('key_resp_2.stopped', key_resp_2.tStopRefresh)
thisExp.nextEntry()
# the Routine "instruct" was not non-slip safe, so reset the non-slip timer
routineTimer.reset()

# set up handler to look after randomisation of conditions etc
trials = data.TrialHandler(nReps=5, method='random', 
    extraInfo=expInfo, originPath=-1,
    trialList=[None],
    seed=None, name='trials')
thisExp.addLoop(trials)  # add the loop to the experiment
thisTrial = trials.trialList[0]  # so we can initialise stimuli with some values
# abbreviate parameter names if possible (e.g. rgb = thisTrial.rgb)
if thisTrial != None:
    for paramName in thisTrial:
        exec('{} = thisTrial[paramName]'.format(paramName))

for thisTrial in trials:
    currentLoop = trials
    # abbreviate parameter names if possible (e.g. rgb = thisTrial.rgb)
    if thisTrial != None:
        for paramName in thisTrial:
            exec('{} = thisTrial[paramName]'.format(paramName))
    
    # ------Prepare to start Routine "blank_screen"-------
    continueRoutine = True
    routineTimer.add(1.000000)
    # update component parameters for each repeat
    # keep track of which components have finished
    blank_screenComponents = [text_3]
    for thisComponent in blank_screenComponents:
        thisComponent.tStart = None
        thisComponent.tStop = None
        thisComponent.tStartRefresh = None
        thisComponent.tStopRefresh = None
        if hasattr(thisComponent, 'status'):
            thisComponent.status = NOT_STARTED
    # reset timers
    t = 0
    _timeToFirstFrame = win.getFutureFlipTime(clock="now")
    blank_screenClock.reset(-_timeToFirstFrame)  # t0 is time of first possible flip
    frameN = -1
    
    # -------Run Routine "blank_screen"-------
    while continueRoutine and routineTimer.getTime() > 0:
        # get current time
        t = blank_screenClock.getTime()
        tThisFlip = win.getFutureFlipTime(clock=blank_screenClock)
        tThisFlipGlobal = win.getFutureFlipTime(clock=None)
        frameN = frameN + 1  # number of completed frames (so 0 is the first frame)
        # update/draw components on each frame
        
        # *text_3* updates
        if text_3.status == NOT_STARTED and tThisFlip >= 0.0-frameTolerance:
            # keep track of start time/frame for later
            text_3.frameNStart = frameN  # exact frame index
            text_3.tStart = t  # local t and not account for scr refresh
            text_3.tStartRefresh = tThisFlipGlobal  # on global time
            win.timeOnFlip(text_3, 'tStartRefresh')  # time at next scr refresh
            text_3.setAutoDraw(True)
        if text_3.status == STARTED:
            # is it time to stop? (based on global clock, using actual start)
            if tThisFlipGlobal > text_3.tStartRefresh + 1.0-frameTolerance:
                # keep track of stop time/frame for later
                text_3.tStop = t  # not accounting for scr refresh
                text_3.frameNStop = frameN  # exact frame index
                win.timeOnFlip(text_3, 'tStopRefresh')  # time at next scr refresh
                text_3.setAutoDraw(False)
        
        # check for quit (typically the Esc key)
        if endExpNow or defaultKeyboard.getKeys(keyList=["escape"]):
            core.quit()
        
        # check if all components have finished
        if not continueRoutine:  # a component has requested a forced-end of Routine
            break
        continueRoutine = False  # will revert to True if at least one component still running
        for thisComponent in blank_screenComponents:
            if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:
                continueRoutine = True
                break  # at least one component has not yet finished
        
        # refresh the screen
        if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen
            win.flip()
    
    # -------Ending Routine "blank_screen"-------
    for thisComponent in blank_screenComponents:
        if hasattr(thisComponent, "setAutoDraw"):
            thisComponent.setAutoDraw(False)
    trials.addData('text_3.started', text_3.tStartRefresh)
    trials.addData('text_3.stopped', text_3.tStopRefresh)
    
    # ------Prepare to start Routine "fixate"-------
    continueRoutine = True
    routineTimer.add(1.000000)
    # update component parameters for each repeat
    # keep track of which components have finished
    fixateComponents = [text_4]
    for thisComponent in fixateComponents:
        thisComponent.tStart = None
        thisComponent.tStop = None
        thisComponent.tStartRefresh = None
        thisComponent.tStopRefresh = None
        if hasattr(thisComponent, 'status'):
            thisComponent.status = NOT_STARTED
    # reset timers
    t = 0
    _timeToFirstFrame = win.getFutureFlipTime(clock="now")
    fixateClock.reset(-_timeToFirstFrame)  # t0 is time of first possible flip
    frameN = -1
    
    # -------Run Routine "fixate"-------
    while continueRoutine and routineTimer.getTime() > 0:
        # get current time
        t = fixateClock.getTime()
        tThisFlip = win.getFutureFlipTime(clock=fixateClock)
        tThisFlipGlobal = win.getFutureFlipTime(clock=None)
        frameN = frameN + 1  # number of completed frames (so 0 is the first frame)
        # update/draw components on each frame
        
        # *text_4* updates
        if text_4.status == NOT_STARTED and tThisFlip >= 0.0-frameTolerance:
            # keep track of start time/frame for later
            text_4.frameNStart = frameN  # exact frame index
            text_4.tStart = t  # local t and not account for scr refresh
            text_4.tStartRefresh = tThisFlipGlobal  # on global time
            win.timeOnFlip(text_4, 'tStartRefresh')  # time at next scr refresh
            text_4.setAutoDraw(True)
        if text_4.status == STARTED:
            # is it time to stop? (based on global clock, using actual start)
            if tThisFlipGlobal > text_4.tStartRefresh + 1-frameTolerance:
                # keep track of stop time/frame for later
                text_4.tStop = t  # not accounting for scr refresh
                text_4.frameNStop = frameN  # exact frame index
                win.timeOnFlip(text_4, 'tStopRefresh')  # time at next scr refresh
                text_4.setAutoDraw(False)
        
        # check for quit (typically the Esc key)
        if endExpNow or defaultKeyboard.getKeys(keyList=["escape"]):
            core.quit()
        
        # check if all components have finished
        if not continueRoutine:  # a component has requested a forced-end of Routine
            break
        continueRoutine = False  # will revert to True if at least one component still running
        for thisComponent in fixateComponents:
            if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:
                continueRoutine = True
                break  # at least one component has not yet finished
        
        # refresh the screen
        if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen
            win.flip()
    
    # -------Ending Routine "fixate"-------
    for thisComponent in fixateComponents:
        if hasattr(thisComponent, "setAutoDraw"):
            thisComponent.setAutoDraw(False)
    trials.addData('text_4.started', text_4.tStartRefresh)
    trials.addData('text_4.stopped', text_4.tStopRefresh)
    
    # ------Prepare to start Routine "bandits"-------
    continueRoutine = True
    # update component parameters for each repeat
    # setup some python lists for storing info about the mouse_5
    mouse_5.x = []
    mouse_5.y = []
    mouse_5.leftButton = []
    mouse_5.midButton = []
    mouse_5.rightButton = []
    mouse_5.time = []
    mouse_5.clicked_name = []
    gotValidClick = False  # until a click is received
    # keep track of which components have finished
    banditsComponents = [image_51, image_52, image_53, image_54, mouse_5, text_5]
    for thisComponent in banditsComponents:
        thisComponent.tStart = None
        thisComponent.tStop = None
        thisComponent.tStartRefresh = None
        thisComponent.tStopRefresh = None
        if hasattr(thisComponent, 'status'):
            thisComponent.status = NOT_STARTED
    # reset timers
    t = 0
    _timeToFirstFrame = win.getFutureFlipTime(clock="now")
    banditsClock.reset(-_timeToFirstFrame)  # t0 is time of first possible flip
    frameN = -1
    
    # -------Run Routine "bandits"-------
    while continueRoutine:
        # get current time
        t = banditsClock.getTime()
        tThisFlip = win.getFutureFlipTime(clock=banditsClock)
        tThisFlipGlobal = win.getFutureFlipTime(clock=None)
        frameN = frameN + 1  # number of completed frames (so 0 is the first frame)
        # update/draw components on each frame
        
        # *image_51* updates
        if image_51.status == NOT_STARTED and tThisFlip >= 0.0-frameTolerance:
            # keep track of start time/frame for later
            image_51.frameNStart = frameN  # exact frame index
            image_51.tStart = t  # local t and not account for scr refresh
            image_51.tStartRefresh = tThisFlipGlobal  # on global time
            win.timeOnFlip(image_51, 'tStartRefresh')  # time at next scr refresh
            image_51.setAutoDraw(True)
        
        # *image_52* updates
        if image_52.status == NOT_STARTED and tThisFlip >= 0.0-frameTolerance:
            # keep track of start time/frame for later
            image_52.frameNStart = frameN  # exact frame index
            image_52.tStart = t  # local t and not account for scr refresh
            image_52.tStartRefresh = tThisFlipGlobal  # on global time
            win.timeOnFlip(image_52, 'tStartRefresh')  # time at next scr refresh
            image_52.setAutoDraw(True)
        
        # *image_53* updates
        if image_53.status == NOT_STARTED and tThisFlip >= 0.0-frameTolerance:
            # keep track of start time/frame for later
            image_53.frameNStart = frameN  # exact frame index
            image_53.tStart = t  # local t and not account for scr refresh
            image_53.tStartRefresh = tThisFlipGlobal  # on global time
            win.timeOnFlip(image_53, 'tStartRefresh')  # time at next scr refresh
            image_53.setAutoDraw(True)
        
        # *image_54* updates
        if image_54.status == NOT_STARTED and tThisFlip >= 0.0-frameTolerance:
            # keep track of start time/frame for later
            image_54.frameNStart = frameN  # exact frame index
            image_54.tStart = t  # local t and not account for scr refresh
            image_54.tStartRefresh = tThisFlipGlobal  # on global time
            win.timeOnFlip(image_54, 'tStartRefresh')  # time at next scr refresh
            image_54.setAutoDraw(True)
        # *mouse_5* updates
        if mouse_5.status == NOT_STARTED and t >= 0.0-frameTolerance:
            # keep track of start time/frame for later
            mouse_5.frameNStart = frameN  # exact frame index
            mouse_5.tStart = t  # local t and not account for scr refresh
            mouse_5.tStartRefresh = tThisFlipGlobal  # on global time
            win.timeOnFlip(mouse_5, 'tStartRefresh')  # time at next scr refresh
            mouse_5.status = STARTED
            mouse_5.mouseClock.reset()
            prevButtonState = mouse_5.getPressed()  # if button is down already this ISN'T a new click
        if mouse_5.status == STARTED:  # only update if started and not finished!
            buttons = mouse_5.getPressed()
            if buttons != prevButtonState:  # button state changed?
                prevButtonState = buttons
                if sum(buttons) > 0:  # state changed to a new click
                    # check if the mouse was inside our 'clickable' objects
                    gotValidClick = False
                    for obj in [image_51, image_52, image_53, image_54]:
                        if obj.contains(mouse_5):
                            gotValidClick = True
                            mouse_5.clicked_name.append(obj.name)
                    x, y = mouse_5.getPos()
                    mouse_5.x.append(x)
                    mouse_5.y.append(y)
                    buttons = mouse_5.getPressed()
                    mouse_5.leftButton.append(buttons[0])
                    mouse_5.midButton.append(buttons[1])
                    mouse_5.rightButton.append(buttons[2])
                    mouse_5.time.append(mouse_5.mouseClock.getTime())
                    if gotValidClick:  # abort routine on response
                        continueRoutine = False
        
        # *text_5* updates
        if text_5.status == NOT_STARTED and tThisFlip >= 0.0-frameTolerance:
            # keep track of start time/frame for later
            text_5.frameNStart = frameN  # exact frame index
            text_5.tStart = t  # local t and not account for scr refresh
            text_5.tStartRefresh = tThisFlipGlobal  # on global time
            win.timeOnFlip(text_5, 'tStartRefresh')  # time at next scr refresh
            text_5.setAutoDraw(True)
        if text_5.status == STARTED:  # only update if drawing
            text_5.setText(cum_rew, log=False)
        
        # check for quit (typically the Esc key)
        if endExpNow or defaultKeyboard.getKeys(keyList=["escape"]):
            core.quit()
        
        # check if all components have finished
        if not continueRoutine:  # a component has requested a forced-end of Routine
            break
        continueRoutine = False  # will revert to True if at least one component still running
        for thisComponent in banditsComponents:
            if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:
                continueRoutine = True
                break  # at least one component has not yet finished
        
        # refresh the screen
        if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen
            win.flip()
    
    # -------Ending Routine "bandits"-------
    for thisComponent in banditsComponents:
        if hasattr(thisComponent, "setAutoDraw"):
            thisComponent.setAutoDraw(False)
    trials.addData('image_51.started', image_51.tStartRefresh)
    trials.addData('image_51.stopped', image_51.tStopRefresh)
    trials.addData('image_52.started', image_52.tStartRefresh)
    trials.addData('image_52.stopped', image_52.tStopRefresh)
    trials.addData('image_53.started', image_53.tStartRefresh)
    trials.addData('image_53.stopped', image_53.tStopRefresh)
    trials.addData('image_54.started', image_54.tStartRefresh)
    trials.addData('image_54.stopped', image_54.tStopRefresh)
    # store data for trials (TrialHandler)
    if len(mouse_5.x): trials.addData('mouse_5.x', mouse_5.x[0])
    if len(mouse_5.y): trials.addData('mouse_5.y', mouse_5.y[0])
    if len(mouse_5.leftButton): trials.addData('mouse_5.leftButton', mouse_5.leftButton[0])
    if len(mouse_5.midButton): trials.addData('mouse_5.midButton', mouse_5.midButton[0])
    if len(mouse_5.rightButton): trials.addData('mouse_5.rightButton', mouse_5.rightButton[0])
    if len(mouse_5.time): trials.addData('mouse_5.time', mouse_5.time[0])
    if len(mouse_5.clicked_name): trials.addData('mouse_5.clicked_name', mouse_5.clicked_name[0])
    trials.addData('mouse_5.started', mouse_5.tStart)
    trials.addData('mouse_5.stopped', mouse_5.tStop)
    trials.addData('text_5.started', text_5.tStartRefresh)
    trials.addData('text_5.stopped', text_5.tStopRefresh)
    # the Routine "bandits" was not non-slip safe, so reset the non-slip timer
    routineTimer.reset()
    
    # ------Prepare to start Routine "feedback"-------
    continueRoutine = True
    routineTimer.add(1.500000)
    # update component parameters for each repeat
    rew = rews[trial_no]
    
    if mouse_5.clicked_name[0] == 'image_51':
        message1 = str(int(rew[0]))
        message2 = ''
        message3 = ''
        message4 = ''
        cum_rew += int(rew[0])
    elif mouse_5.clicked_name[0] == 'image_52':
        message1 = ''
        message2 = str(int(rew[1]))
        message3 = ''
        message4 = ''
        cum_rew += int(rew[1])
    elif mouse_5.clicked_name[0] == 'image_53':
        message1 = ''
        message2 = ''
        message3 = str(int(rew[2]))
        message4 = ''
        cum_rew += int(rew[2])
    elif mouse_5.clicked_name[0] == 'image_54':
        message1 = ''
        message2 = ''
        message3 = ''
        message4 = str(int(rew[3]))
        cum_rew += int(rew[3])
    
    text_61.setText(message1)
    text_62.setText(message2)
    text_63.setText(message3)
    text_64.setText(message4)
    # keep track of which components have finished
    feedbackComponents = [image_61, image_62, image_63, image_64, text_61, text_62, text_63, text_64, text_6]
    for thisComponent in feedbackComponents:
        thisComponent.tStart = None
        thisComponent.tStop = None
        thisComponent.tStartRefresh = None
        thisComponent.tStopRefresh = None
        if hasattr(thisComponent, 'status'):
            thisComponent.status = NOT_STARTED
    # reset timers
    t = 0
    _timeToFirstFrame = win.getFutureFlipTime(clock="now")
    feedbackClock.reset(-_timeToFirstFrame)  # t0 is time of first possible flip
    frameN = -1
    
    # -------Run Routine "feedback"-------
    while continueRoutine and routineTimer.getTime() > 0:
        # get current time
        t = feedbackClock.getTime()
        tThisFlip = win.getFutureFlipTime(clock=feedbackClock)
        tThisFlipGlobal = win.getFutureFlipTime(clock=None)
        frameN = frameN + 1  # number of completed frames (so 0 is the first frame)
        # update/draw components on each frame
        
        # *image_61* updates
        if image_61.status == NOT_STARTED and tThisFlip >= 0.0-frameTolerance:
            # keep track of start time/frame for later
            image_61.frameNStart = frameN  # exact frame index
            image_61.tStart = t  # local t and not account for scr refresh
            image_61.tStartRefresh = tThisFlipGlobal  # on global time
            win.timeOnFlip(image_61, 'tStartRefresh')  # time at next scr refresh
            image_61.setAutoDraw(True)
        if image_61.status == STARTED:
            # is it time to stop? (based on global clock, using actual start)
            if tThisFlipGlobal > image_61.tStartRefresh + 1.5-frameTolerance:
                # keep track of stop time/frame for later
                image_61.tStop = t  # not accounting for scr refresh
                image_61.frameNStop = frameN  # exact frame index
                win.timeOnFlip(image_61, 'tStopRefresh')  # time at next scr refresh
                image_61.setAutoDraw(False)
        
        # *image_62* updates
        if image_62.status == NOT_STARTED and tThisFlip >= 0.0-frameTolerance:
            # keep track of start time/frame for later
            image_62.frameNStart = frameN  # exact frame index
            image_62.tStart = t  # local t and not account for scr refresh
            image_62.tStartRefresh = tThisFlipGlobal  # on global time
            win.timeOnFlip(image_62, 'tStartRefresh')  # time at next scr refresh
            image_62.setAutoDraw(True)
        if image_62.status == STARTED:
            # is it time to stop? (based on global clock, using actual start)
            if tThisFlipGlobal > image_62.tStartRefresh + 1.5-frameTolerance:
                # keep track of stop time/frame for later
                image_62.tStop = t  # not accounting for scr refresh
                image_62.frameNStop = frameN  # exact frame index
                win.timeOnFlip(image_62, 'tStopRefresh')  # time at next scr refresh
                image_62.setAutoDraw(False)
        
        # *image_63* updates
        if image_63.status == NOT_STARTED and tThisFlip >= 0.0-frameTolerance:
            # keep track of start time/frame for later
            image_63.frameNStart = frameN  # exact frame index
            image_63.tStart = t  # local t and not account for scr refresh
            image_63.tStartRefresh = tThisFlipGlobal  # on global time
            win.timeOnFlip(image_63, 'tStartRefresh')  # time at next scr refresh
            image_63.setAutoDraw(True)
        if image_63.status == STARTED:
            # is it time to stop? (based on global clock, using actual start)
            if tThisFlipGlobal > image_63.tStartRefresh + 1.5-frameTolerance:
                # keep track of stop time/frame for later
                image_63.tStop = t  # not accounting for scr refresh
                image_63.frameNStop = frameN  # exact frame index
                win.timeOnFlip(image_63, 'tStopRefresh')  # time at next scr refresh
                image_63.setAutoDraw(False)
        
        # *image_64* updates
        if image_64.status == NOT_STARTED and tThisFlip >= 0.0-frameTolerance:
            # keep track of start time/frame for later
            image_64.frameNStart = frameN  # exact frame index
            image_64.tStart = t  # local t and not account for scr refresh
            image_64.tStartRefresh = tThisFlipGlobal  # on global time
            win.timeOnFlip(image_64, 'tStartRefresh')  # time at next scr refresh
            image_64.setAutoDraw(True)
        if image_64.status == STARTED:
            # is it time to stop? (based on global clock, using actual start)
            if tThisFlipGlobal > image_64.tStartRefresh + 1.5-frameTolerance:
                # keep track of stop time/frame for later
                image_64.tStop = t  # not accounting for scr refresh
                image_64.frameNStop = frameN  # exact frame index
                win.timeOnFlip(image_64, 'tStopRefresh')  # time at next scr refresh
                image_64.setAutoDraw(False)
        
        # *text_61* updates
        if text_61.status == NOT_STARTED and tThisFlip >= 0.0-frameTolerance:
            # keep track of start time/frame for later
            text_61.frameNStart = frameN  # exact frame index
            text_61.tStart = t  # local t and not account for scr refresh
            text_61.tStartRefresh = tThisFlipGlobal  # on global time
            win.timeOnFlip(text_61, 'tStartRefresh')  # time at next scr refresh
            text_61.setAutoDraw(True)
        if text_61.status == STARTED:
            # is it time to stop? (based on global clock, using actual start)
            if tThisFlipGlobal > text_61.tStartRefresh + 1.5-frameTolerance:
                # keep track of stop time/frame for later
                text_61.tStop = t  # not accounting for scr refresh
                text_61.frameNStop = frameN  # exact frame index
                win.timeOnFlip(text_61, 'tStopRefresh')  # time at next scr refresh
                text_61.setAutoDraw(False)
        
        # *text_62* updates
        if text_62.status == NOT_STARTED and tThisFlip >= 0.0-frameTolerance:
            # keep track of start time/frame for later
            text_62.frameNStart = frameN  # exact frame index
            text_62.tStart = t  # local t and not account for scr refresh
            text_62.tStartRefresh = tThisFlipGlobal  # on global time
            win.timeOnFlip(text_62, 'tStartRefresh')  # time at next scr refresh
            text_62.setAutoDraw(True)
        if text_62.status == STARTED:
            # is it time to stop? (based on global clock, using actual start)
            if tThisFlipGlobal > text_62.tStartRefresh + 1.5-frameTolerance:
                # keep track of stop time/frame for later
                text_62.tStop = t  # not accounting for scr refresh
                text_62.frameNStop = frameN  # exact frame index
                win.timeOnFlip(text_62, 'tStopRefresh')  # time at next scr refresh
                text_62.setAutoDraw(False)
        
        # *text_63* updates
        if text_63.status == NOT_STARTED and tThisFlip >= 0.0-frameTolerance:
            # keep track of start time/frame for later
            text_63.frameNStart = frameN  # exact frame index
            text_63.tStart = t  # local t and not account for scr refresh
            text_63.tStartRefresh = tThisFlipGlobal  # on global time
            win.timeOnFlip(text_63, 'tStartRefresh')  # time at next scr refresh
            text_63.setAutoDraw(True)
        if text_63.status == STARTED:
            # is it time to stop? (based on global clock, using actual start)
            if tThisFlipGlobal > text_63.tStartRefresh + 1.5-frameTolerance:
                # keep track of stop time/frame for later
                text_63.tStop = t  # not accounting for scr refresh
                text_63.frameNStop = frameN  # exact frame index
                win.timeOnFlip(text_63, 'tStopRefresh')  # time at next scr refresh
                text_63.setAutoDraw(False)
        
        # *text_64* updates
        if text_64.status == NOT_STARTED and tThisFlip >= 0.0-frameTolerance:
            # keep track of start time/frame for later
            text_64.frameNStart = frameN  # exact frame index
            text_64.tStart = t  # local t and not account for scr refresh
            text_64.tStartRefresh = tThisFlipGlobal  # on global time
            win.timeOnFlip(text_64, 'tStartRefresh')  # time at next scr refresh
            text_64.setAutoDraw(True)
        if text_64.status == STARTED:
            # is it time to stop? (based on global clock, using actual start)
            if tThisFlipGlobal > text_64.tStartRefresh + 1.5-frameTolerance:
                # keep track of stop time/frame for later
                text_64.tStop = t  # not accounting for scr refresh
                text_64.frameNStop = frameN  # exact frame index
                win.timeOnFlip(text_64, 'tStopRefresh')  # time at next scr refresh
                text_64.setAutoDraw(False)
        
        # *text_6* updates
        if text_6.status == NOT_STARTED and tThisFlip >= 0.0-frameTolerance:
            # keep track of start time/frame for later
            text_6.frameNStart = frameN  # exact frame index
            text_6.tStart = t  # local t and not account for scr refresh
            text_6.tStartRefresh = tThisFlipGlobal  # on global time
            win.timeOnFlip(text_6, 'tStartRefresh')  # time at next scr refresh
            text_6.setAutoDraw(True)
        if text_6.status == STARTED:
            # is it time to stop? (based on global clock, using actual start)
            if tThisFlipGlobal > text_6.tStartRefresh + 1.5-frameTolerance:
                # keep track of stop time/frame for later
                text_6.tStop = t  # not accounting for scr refresh
                text_6.frameNStop = frameN  # exact frame index
                win.timeOnFlip(text_6, 'tStopRefresh')  # time at next scr refresh
                text_6.setAutoDraw(False)
        if text_6.status == STARTED:  # only update if drawing
            text_6.setText(cum_rew, log=False)
        
        # check for quit (typically the Esc key)
        if endExpNow or defaultKeyboard.getKeys(keyList=["escape"]):
            core.quit()
        
        # check if all components have finished
        if not continueRoutine:  # a component has requested a forced-end of Routine
            break
        continueRoutine = False  # will revert to True if at least one component still running
        for thisComponent in feedbackComponents:
            if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:
                continueRoutine = True
                break  # at least one component has not yet finished
        
        # refresh the screen
        if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen
            win.flip()
    
    # -------Ending Routine "feedback"-------
    for thisComponent in feedbackComponents:
        if hasattr(thisComponent, "setAutoDraw"):
            thisComponent.setAutoDraw(False)
    trial_no += 1
    trials.addData('image_61.started', image_61.tStartRefresh)
    trials.addData('image_61.stopped', image_61.tStopRefresh)
    trials.addData('image_62.started', image_62.tStartRefresh)
    trials.addData('image_62.stopped', image_62.tStopRefresh)
    trials.addData('image_63.started', image_63.tStartRefresh)
    trials.addData('image_63.stopped', image_63.tStopRefresh)
    trials.addData('image_64.started', image_64.tStartRefresh)
    trials.addData('image_64.stopped', image_64.tStopRefresh)
    trials.addData('text_61.started', text_61.tStartRefresh)
    trials.addData('text_61.stopped', text_61.tStopRefresh)
    trials.addData('text_62.started', text_62.tStartRefresh)
    trials.addData('text_62.stopped', text_62.tStopRefresh)
    trials.addData('text_63.started', text_63.tStartRefresh)
    trials.addData('text_63.stopped', text_63.tStopRefresh)
    trials.addData('text_64.started', text_64.tStartRefresh)
    trials.addData('text_64.stopped', text_64.tStopRefresh)
    trials.addData('text_6.started', text_6.tStartRefresh)
    trials.addData('text_6.stopped', text_6.tStopRefresh)
    thisExp.nextEntry()
    
# completed 5 repeats of 'trials'


# ------Prepare to start Routine "thanks"-------
continueRoutine = True
routineTimer.add(10.000000)
# update component parameters for each repeat
# keep track of which components have finished
thanksComponents = [text_7]
for thisComponent in thanksComponents:
    thisComponent.tStart = None
    thisComponent.tStop = None
    thisComponent.tStartRefresh = None
    thisComponent.tStopRefresh = None
    if hasattr(thisComponent, 'status'):
        thisComponent.status = NOT_STARTED
# reset timers
t = 0
_timeToFirstFrame = win.getFutureFlipTime(clock="now")
thanksClock.reset(-_timeToFirstFrame)  # t0 is time of first possible flip
frameN = -1

# -------Run Routine "thanks"-------
while continueRoutine and routineTimer.getTime() > 0:
    # get current time
    t = thanksClock.getTime()
    tThisFlip = win.getFutureFlipTime(clock=thanksClock)
    tThisFlipGlobal = win.getFutureFlipTime(clock=None)
    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)
    # update/draw components on each frame
    
    # *text_7* updates
    if text_7.status == NOT_STARTED and tThisFlip >= 0.0-frameTolerance:
        # keep track of start time/frame for later
        text_7.frameNStart = frameN  # exact frame index
        text_7.tStart = t  # local t and not account for scr refresh
        text_7.tStartRefresh = tThisFlipGlobal  # on global time
        win.timeOnFlip(text_7, 'tStartRefresh')  # time at next scr refresh
        text_7.setAutoDraw(True)
    if text_7.status == STARTED:
        # is it time to stop? (based on global clock, using actual start)
        if tThisFlipGlobal > text_7.tStartRefresh + 10-frameTolerance:
            # keep track of stop time/frame for later
            text_7.tStop = t  # not accounting for scr refresh
            text_7.frameNStop = frameN  # exact frame index
            win.timeOnFlip(text_7, 'tStopRefresh')  # time at next scr refresh
            text_7.setAutoDraw(False)
    
    # check for quit (typically the Esc key)
    if endExpNow or defaultKeyboard.getKeys(keyList=["escape"]):
        core.quit()
    
    # check if all components have finished
    if not continueRoutine:  # a component has requested a forced-end of Routine
        break
    continueRoutine = False  # will revert to True if at least one component still running
    for thisComponent in thanksComponents:
        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:
            continueRoutine = True
            break  # at least one component has not yet finished
    
    # refresh the screen
    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen
        win.flip()

# -------Ending Routine "thanks"-------
for thisComponent in thanksComponents:
    if hasattr(thisComponent, "setAutoDraw"):
        thisComponent.setAutoDraw(False)
thisExp.addData('text_7.started', text_7.tStartRefresh)
thisExp.addData('text_7.stopped', text_7.tStopRefresh)

# Flip one final time so any remaining win.callOnFlip() 
# and win.timeOnFlip() tasks get executed before quitting
win.flip()

# these shouldn't be strictly necessary (should auto-save)
thisExp.saveAsWideText(filename+'.csv')
thisExp.saveAsPickle(filename)
logging.flush()
# make sure everything is closed down
thisExp.abort()  # or data files will save again on exit
win.close()
core.quit()
